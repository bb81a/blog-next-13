{
  "title": "Mob Programming with 65 Million of Your Peers",
  "excerpt": "You are contributing value, whether you like it not, when you make your code public. Training machine learning models on publicly available data is considered fair use across the machine learning community. The models gain insight and accuracy from the public collective intelligence. The only way to extract value back out is to use Copilot yourself.",
  "coverImage": "/assets/blog/img/copilot.jpg",
  "date": "2021-07-12T00:00:00.000Z",
  "published": true,
  "author": {
    "name": "Dan Stroot",
    "picture": "/assets/blog/authors/dan.jpeg",
    "type": "Author",
    "_raw": {}
  },
  "ogImage": {
    "url": "/assets/blog/img/copilot.jpg",
    "type": "OGImage",
    "_raw": {}
  },
  "seoURL": "https://danstroot.com/2021/07/11/github-copilot/",
  "body": {
    "raw": "\n[GitHub](https://github.com/) (owned by [Microsoft](https://www.microsoft.com/en-us/)), has partnered with [OpenAI](https://openai.com/) to create an AI tool called [Copilot](https://copilot.github.com/) that **writes code for you**. It is a plugin to [Visual Studio Code](https://code.visualstudio.com/) which auto-generates code based on the contents of the current file, and your current cursor location.\n\nOpen AI developed [Codex](https://arxiv.org/abs/2107.03374), a deep neural network language model that translates natural language into code, and Codex is integrated with Copilot. Side note: _OpenAI runs on Microsoft Azure_.\n\nOpenAI's Codex was trained on publicly available source code and natural language, so it understands **both programming and human languages**. Codex is an API-driven service that has many more capabilities, which developers can explore — and build into their own apps — when OpenAI opens access to Codex later this year (2021).\n\nCodex was trained on billions of lines of code, uploaded by the 65 million users of GitHub. The aim is for Codex to learn enough about the patterns in that code that it can see what you are trying to do and write the code for you. It is like mob programming with 65 million of your peers!\n\nGitHub eventually plans to sell access to Copilot to developers as a productivity tool.\n\n### How it Works\n\nIn practice, you write a human-readable comment describing the logic you want, and you start coding. Copilot will make suggestions to complete the code. Automatically, seamlessly, and fast enough that your workflow will not be interrupted. GitHub Copilot is a code **synthesizer**, not a search engine: most of the code that it suggests is **uniquely generated and has never been seen before**. This is very germane to the legal questions we will explore below.\n\n![Copilot Diagram](https://danstroot.imgix.net/assets/blog/img/copilot3.jpg)\n\nThe GitHub Copilot editor extension sends your comments and code to the GitHub Copilot service, which then uses OpenAI Codex to synthesize and suggest individual lines and whole functions. GitHub Copilot also records whether the suggestions are accepted or rejected. This telemetry is used to improve future versions of the AI system, so that GitHub Copilot can make better suggestions in the future.\n\n![Copilot Quote](https://danstroot.imgix.net/assets/blog/img/copilot2.jpg)\n\n### You are Contributing Value (whether you like it not)\n\nThe models gain insight and accuracy from the public collective intelligence. If you have code that is publicly available you are helping create Copilot, and value for GitHub, and the only way to extract value back out is to use Copilot yourself.\n\n“Fair use” of copyrighted material depends on whether it is “transformed” when it is reused. There are many ways of transforming a work, like using it for parody or criticism or summarizing it.\n\nTraining machine learning models on publicly available data is generally considered fair use across the machine learning community. Here is [OpenAI's position, as submitted to the USPTO](https://www.uspto.gov/sites/default/files/documents/OpenAI_RFC-84-FR-58141.pdf) on fair use.\n\n### Virtuous Circle\n\n1. Programmers like to use GitHub to maintain their code repositories. It is already the de-facto home for Open-Source projects and many programmers also keep their personal repositories on GitHub (I do).\n\n2. Copilot was trained on literally billions of lines of code from these GitHub repositories.\n\n3. Microsoft offers a very extensible Integrated Development Environment (IDE) called Visual Studio Code, or VSCode that many programmers already use. GitHub Copilot is available today only as a Visual Studio Code extension.\n\n> \"For now, we’re focused on delivering the best experience in Visual Studio Code only.\"\n\nCopilot will create a virtuous circle because **drive programmers to use VSCode** they will be more productive. The code suggestions they choose from Copilot will further train Copilot so it will make even better suggestions. Programmers save their code on GitHub because eventually it will improve Copilot, which further improves their productivity and code quality.\n\nThis virtuous circle is a way to solidify GitHub as \"the\" place to store your code.\n\n### Legal Issues Remain Uncharted Territory\n\nThere’s a lot of public code in the world with insecure coding patterns, bugs, or other issues. If you program using Copilot and accept one of its suggestions, and that specific suggestion creates a security vulnerability in your code, who is liable? GitHub's position is that you are 100% responsible for your code and Copilot is just a helpful tool.\n\nIn other words, it's like spell check, and when you use spell check in a legal document what if it suggests a word that changes the meaning of the document? Who is liable? Copilot takes this one step further - imagine while writing a document and spell check started suggesting whole paragraphs, or pages of content (hint: _GPT-3 can do this already_)?\n\nThe other main concern is that even if Copilot synthesizes code, rather than regurgitating it, it could synthesize code that is an **exact replica** of non-open, protected code. If the Copilot-generated code becomes the reason for infringement, who is accountable? How can anyone prove the code was generated by Copilot and not the project owner?\n\nToday, a human still must review and accept the code suggestions, which providers of Copilot argue transfers all liability. This makes sense for code that may not work properly or be secure because a human (or automated) review could be reasonably expected to handle those situations. But no human, or code review system, can reasonably be expected to know if a code sequence matches an existing, licensed code sequence.\n\nThe clear legal issue for users of Copilot discussed by IP lawyer [Kate Downing](https://fossa.com/blog/analyzing-legal-implications-github-copilot/) is that in some cases using Copilot’s suggestions may be a breach of license (or require relicensing your own work under a GPL-compatible license):\n\n> \"The more complex and lengthy the suggestion, the more likely it has some sort of copyrightable expression.\"\n\n### See Copilot Answer Leetcode Code Interview Questions\n\nLet's watch Copilot in action answering leetcode coding interview questions:\n\n<YouTube link='https://youtu.be/FHwnrYm0mNc' />\n\n### Lower Barriers to Entry for Coders\n\nHow disruptive will Copilot be for the Software Engineering Industry? Creating intelligent systems to \"co-code\" with you will bring enormous change to the developer experience. GitHub Copilot has the potential to lower barriers to entry, enabling more people to explore software development and join the next generation of developers. This opens the door for many people who may not otherwise be able to get a developer position, but it will **almost certainly lower wages for entry level programmers** who code in common languages.\n\nHowever, **software engineering is not the same thing as writing code**. Software engineering is a much more profound task that implies broad knowledge, problem solving skills, and creativity. Copilot could actually increase demand and increase wages for solution architects, senior lead developers, and others with more experience and specialized skills. As \"writing the code\" becomes more commoditized, **more experienced people will likely be in higher demand** to \"oversee\" the work.\n\n### References\n\n- [GitHub Copilot](https://copilot.github.com/)\n- [GitHub’s Commercial AI Tool Was Built From Open Source Code](https://www.wired.com/story/github-commercial-ai-tool-built-open-source-code/)\n- [Is GitHub Copilot a blessing, or a curse?](https://www.fast.ai/2021/07/19/copilot/)\n- [FSF: Call for white papers on philosophical and legal questions around Copilot](https://www.fsf.org/blogs/licensing/fsf-funded-call-for-white-papers-on-philosophical-and-legal-questions-around-copilot)\n",
    "code": "var Component=(()=>{var d=Object.create;var r=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var w=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),b=(t,e)=>{for(var i in e)r(t,i,{get:e[i],enumerable:!0})},a=(t,e,i,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let n of p(e))!m.call(t,n)&&n!==i&&r(t,n,{get:()=>e[n],enumerable:!(s=u(e,n))||s.enumerable});return t};var f=(t,e,i)=>(i=t!=null?d(g(t)):{},a(e||!t||!t.__esModule?r(i,\"default\",{value:t,enumerable:!0}):i,t)),y=t=>a(r({},\"__esModule\",{value:!0}),t);var c=w((T,l)=>{l.exports=_jsx_runtime});var I={};b(I,{default:()=>x,frontmatter:()=>v});var o=f(c()),v={title:\"Mob Programming with 65 Million of Your Peers\",excerpt:\"You are contributing value, whether you like it not, when you make your code public. Training machine learning models on publicly available data is considered fair use across the machine learning community. The models gain insight and accuracy from the public collective intelligence. The only way to extract value back out is to use Copilot yourself.\",coverImage:\"/assets/blog/img/copilot.jpg\",date:\"2021-07-12\",published:!0,author:{name:\"Dan Stroot\",picture:\"/assets/blog/authors/dan.jpeg\"},ogImage:{url:\"/assets/blog/img/copilot.jpg\"},seoURL:\"https://danstroot.com/2021/07/11/github-copilot/\"};function h(t){let e=Object.assign({p:\"p\",a:\"a\",strong:\"strong\",em:\"em\",h3:\"h3\",img:\"img\",ol:\"ol\",li:\"li\",blockquote:\"blockquote\",ul:\"ul\"},t.components),{YouTube:i}=e;return i||k(\"YouTube\",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.a,{href:\"https://github.com/\",children:\"GitHub\"}),\" (owned by \",(0,o.jsx)(e.a,{href:\"https://www.microsoft.com/en-us/\",children:\"Microsoft\"}),\"), has partnered with \",(0,o.jsx)(e.a,{href:\"https://openai.com/\",children:\"OpenAI\"}),\" to create an AI tool called \",(0,o.jsx)(e.a,{href:\"https://copilot.github.com/\",children:\"Copilot\"}),\" that \",(0,o.jsx)(e.strong,{children:\"writes code for you\"}),\". It is a plugin to \",(0,o.jsx)(e.a,{href:\"https://code.visualstudio.com/\",children:\"Visual Studio Code\"}),\" which auto-generates code based on the contents of the current file, and your current cursor location.\"]}),`\n`,(0,o.jsxs)(e.p,{children:[\"Open AI developed \",(0,o.jsx)(e.a,{href:\"https://arxiv.org/abs/2107.03374\",children:\"Codex\"}),\", a deep neural network language model that translates natural language into code, and Codex is integrated with Copilot. Side note: \",(0,o.jsx)(e.em,{children:\"OpenAI runs on Microsoft Azure\"}),\".\"]}),`\n`,(0,o.jsxs)(e.p,{children:[\"OpenAI's Codex was trained on publicly available source code and natural language, so it understands \",(0,o.jsx)(e.strong,{children:\"both programming and human languages\"}),\". Codex is an API-driven service that has many more capabilities, which developers can explore \\u2014 and build into their own apps \\u2014 when OpenAI opens access to Codex later this year (2021).\"]}),`\n`,(0,o.jsx)(e.p,{children:\"Codex was trained on billions of lines of code, uploaded by the 65 million users of GitHub. The aim is for Codex to learn enough about the patterns in that code that it can see what you are trying to do and write the code for you. It is like mob programming with 65 million of your peers!\"}),`\n`,(0,o.jsx)(e.p,{children:\"GitHub eventually plans to sell access to Copilot to developers as a productivity tool.\"}),`\n`,(0,o.jsx)(e.h3,{id:\"how-it-works\",children:\"How it Works\"}),`\n`,(0,o.jsxs)(e.p,{children:[\"In practice, you write a human-readable comment describing the logic you want, and you start coding. Copilot will make suggestions to complete the code. Automatically, seamlessly, and fast enough that your workflow will not be interrupted. GitHub Copilot is a code \",(0,o.jsx)(e.strong,{children:\"synthesizer\"}),\", not a search engine: most of the code that it suggests is \",(0,o.jsx)(e.strong,{children:\"uniquely generated and has never been seen before\"}),\". This is very germane to the legal questions we will explore below.\"]}),`\n`,(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:\"https://danstroot.imgix.net/assets/blog/img/copilot3.jpg\",alt:\"Copilot Diagram\"})}),`\n`,(0,o.jsx)(e.p,{children:\"The GitHub Copilot editor extension sends your comments and code to the GitHub Copilot service, which then uses OpenAI Codex to synthesize and suggest individual lines and whole functions. GitHub Copilot also records whether the suggestions are accepted or rejected. This telemetry is used to improve future versions of the AI system, so that GitHub Copilot can make better suggestions in the future.\"}),`\n`,(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:\"https://danstroot.imgix.net/assets/blog/img/copilot2.jpg\",alt:\"Copilot Quote\"})}),`\n`,(0,o.jsx)(e.h3,{id:\"you-are-contributing-value-whether-you-like-it-not\",children:\"You are Contributing Value (whether you like it not)\"}),`\n`,(0,o.jsx)(e.p,{children:\"The models gain insight and accuracy from the public collective intelligence. If you have code that is publicly available you are helping create Copilot, and value for GitHub, and the only way to extract value back out is to use Copilot yourself.\"}),`\n`,(0,o.jsx)(e.p,{children:\"\\u201CFair use\\u201D of copyrighted material depends on whether it is \\u201Ctransformed\\u201D when it is reused. There are many ways of transforming a work, like using it for parody or criticism or summarizing it.\"}),`\n`,(0,o.jsxs)(e.p,{children:[\"Training machine learning models on publicly available data is generally considered fair use across the machine learning community. Here is \",(0,o.jsx)(e.a,{href:\"https://www.uspto.gov/sites/default/files/documents/OpenAI_RFC-84-FR-58141.pdf\",children:\"OpenAI's position, as submitted to the USPTO\"}),\" on fair use.\"]}),`\n`,(0,o.jsx)(e.h3,{id:\"virtuous-circle\",children:\"Virtuous Circle\"}),`\n`,(0,o.jsxs)(e.ol,{children:[`\n`,(0,o.jsxs)(e.li,{children:[`\n`,(0,o.jsx)(e.p,{children:\"Programmers like to use GitHub to maintain their code repositories. It is already the de-facto home for Open-Source projects and many programmers also keep their personal repositories on GitHub (I do).\"}),`\n`]}),`\n`,(0,o.jsxs)(e.li,{children:[`\n`,(0,o.jsx)(e.p,{children:\"Copilot was trained on literally billions of lines of code from these GitHub repositories.\"}),`\n`]}),`\n`,(0,o.jsxs)(e.li,{children:[`\n`,(0,o.jsx)(e.p,{children:\"Microsoft offers a very extensible Integrated Development Environment (IDE) called Visual Studio Code, or VSCode that many programmers already use. GitHub Copilot is available today only as a Visual Studio Code extension.\"}),`\n`]}),`\n`]}),`\n`,(0,o.jsxs)(e.blockquote,{children:[`\n`,(0,o.jsx)(e.p,{children:'\"For now, we\\u2019re focused on delivering the best experience in Visual Studio Code only.\"'}),`\n`]}),`\n`,(0,o.jsxs)(e.p,{children:[\"Copilot will create a virtuous circle because \",(0,o.jsx)(e.strong,{children:\"drive programmers to use VSCode\"}),\" they will be more productive. The code suggestions they choose from Copilot will further train Copilot so it will make even better suggestions. Programmers save their code on GitHub because eventually it will improve Copilot, which further improves their productivity and code quality.\"]}),`\n`,(0,o.jsx)(e.p,{children:'This virtuous circle is a way to solidify GitHub as \"the\" place to store your code.'}),`\n`,(0,o.jsx)(e.h3,{id:\"legal-issues-remain-uncharted-territory\",children:\"Legal Issues Remain Uncharted Territory\"}),`\n`,(0,o.jsx)(e.p,{children:\"There\\u2019s a lot of public code in the world with insecure coding patterns, bugs, or other issues. If you program using Copilot and accept one of its suggestions, and that specific suggestion creates a security vulnerability in your code, who is liable? GitHub's position is that you are 100% responsible for your code and Copilot is just a helpful tool.\"}),`\n`,(0,o.jsxs)(e.p,{children:[\"In other words, it's like spell check, and when you use spell check in a legal document what if it suggests a word that changes the meaning of the document? Who is liable? Copilot takes this one step further - imagine while writing a document and spell check started suggesting whole paragraphs, or pages of content (hint: \",(0,o.jsx)(e.em,{children:\"GPT-3 can do this already\"}),\")?\"]}),`\n`,(0,o.jsxs)(e.p,{children:[\"The other main concern is that even if Copilot synthesizes code, rather than regurgitating it, it could synthesize code that is an \",(0,o.jsx)(e.strong,{children:\"exact replica\"}),\" of non-open, protected code. If the Copilot-generated code becomes the reason for infringement, who is accountable? How can anyone prove the code was generated by Copilot and not the project owner?\"]}),`\n`,(0,o.jsx)(e.p,{children:\"Today, a human still must review and accept the code suggestions, which providers of Copilot argue transfers all liability. This makes sense for code that may not work properly or be secure because a human (or automated) review could be reasonably expected to handle those situations. But no human, or code review system, can reasonably be expected to know if a code sequence matches an existing, licensed code sequence.\"}),`\n`,(0,o.jsxs)(e.p,{children:[\"The clear legal issue for users of Copilot discussed by IP lawyer \",(0,o.jsx)(e.a,{href:\"https://fossa.com/blog/analyzing-legal-implications-github-copilot/\",children:\"Kate Downing\"}),\" is that in some cases using Copilot\\u2019s suggestions may be a breach of license (or require relicensing your own work under a GPL-compatible license):\"]}),`\n`,(0,o.jsxs)(e.blockquote,{children:[`\n`,(0,o.jsx)(e.p,{children:'\"The more complex and lengthy the suggestion, the more likely it has some sort of copyrightable expression.\"'}),`\n`]}),`\n`,(0,o.jsx)(e.h3,{id:\"see-copilot-answer-leetcode-code-interview-questions\",children:\"See Copilot Answer Leetcode Code Interview Questions\"}),`\n`,(0,o.jsx)(e.p,{children:\"Let's watch Copilot in action answering leetcode coding interview questions:\"}),`\n`,(0,o.jsx)(i,{link:\"https://youtu.be/FHwnrYm0mNc\"}),`\n`,(0,o.jsx)(e.h3,{id:\"lower-barriers-to-entry-for-coders\",children:\"Lower Barriers to Entry for Coders\"}),`\n`,(0,o.jsxs)(e.p,{children:['How disruptive will Copilot be for the Software Engineering Industry? Creating intelligent systems to \"co-code\" with you will bring enormous change to the developer experience. GitHub Copilot has the potential to lower barriers to entry, enabling more people to explore software development and join the next generation of developers. This opens the door for many people who may not otherwise be able to get a developer position, but it will ',(0,o.jsx)(e.strong,{children:\"almost certainly lower wages for entry level programmers\"}),\" who code in common languages.\"]}),`\n`,(0,o.jsxs)(e.p,{children:[\"However, \",(0,o.jsx)(e.strong,{children:\"software engineering is not the same thing as writing code\"}),'. Software engineering is a much more profound task that implies broad knowledge, problem solving skills, and creativity. Copilot could actually increase demand and increase wages for solution architects, senior lead developers, and others with more experience and specialized skills. As \"writing the code\" becomes more commoditized, ',(0,o.jsx)(e.strong,{children:\"more experienced people will likely be in higher demand\"}),' to \"oversee\" the work.']}),`\n`,(0,o.jsx)(e.h3,{id:\"references\",children:\"References\"}),`\n`,(0,o.jsxs)(e.ul,{children:[`\n`,(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:\"https://copilot.github.com/\",children:\"GitHub Copilot\"})}),`\n`,(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:\"https://www.wired.com/story/github-commercial-ai-tool-built-open-source-code/\",children:\"GitHub\\u2019s Commercial AI Tool Was Built From Open Source Code\"})}),`\n`,(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:\"https://www.fast.ai/2021/07/19/copilot/\",children:\"Is GitHub Copilot a blessing, or a curse?\"})}),`\n`,(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:\"https://www.fsf.org/blogs/licensing/fsf-funded-call-for-white-papers-on-philosophical-and-legal-questions-around-copilot\",children:\"FSF: Call for white papers on philosophical and legal questions around Copilot\"})}),`\n`]})]})}function C(t={}){let{wrapper:e}=t.components||{};return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(h,t)})):h(t)}var x=C;function k(t,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return y(I);})();\n;return Component;"
  },
  "_id": "posts/2021-07-12-github-copilot.mdx",
  "_raw": {
    "sourceFilePath": "posts/2021-07-12-github-copilot.mdx",
    "sourceFileName": "2021-07-12-github-copilot.mdx",
    "sourceFileDir": "posts",
    "contentType": "mdx",
    "flattenedPath": "posts/2021-07-12-github-copilot"
  },
  "type": "Post",
  "slug": "/posts/2021-07-12-github-copilot",
  "slugAsParams": "2021-07-12-github-copilot",
  "stats": {
    "text": "6 min read",
    "minutes": 5.765,
    "time": 345900,
    "words": 1153
  }
}