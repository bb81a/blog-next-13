{
  "title": "ChatGPT-4 is More Creative than You",
  "excerpt": "We think that generative AI creativity is limited by its training data and algorithms, and therefore can produce technically proficient content, but not truly novel and innovative content. We like to believe that our own creativity and innovation, rooted in personal experience, knowledge, and human emotions results in intentionality and emotional depth that cannot be replicated by AI. Current research contradicts that view.",
  "coverImage": "/assets/blog/img/brainstorming2.jpg",
  "date": "2023-08-01T00:00:00.000Z",
  "published": true,
  "author": {
    "name": "Dan Stroot",
    "picture": "/assets/blog/authors/dan.jpeg",
    "type": "Author",
    "_raw": {}
  },
  "ogImage": {
    "url": "/assets/blog/img/brainstorming2.jpg",
    "type": "OGImage",
    "_raw": {}
  },
  "seoURL": null,
  "body": {
    "raw": "\nWe think that generative AI creativity is limited by its training data and algorithms, and therefore can produce technically proficient content, but not truly novel and innovative content. We like to believe that our own creativity and innovation, rooted in personal experience, knowledge, and human emotions results in intentionality and emotional depth that cannot be replicated by AI. Current research contradicts that view.\n\nFor example, a recent [Wharton study](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4526071) that compared the ideation capabilities of ChatGPT-4, a 2023 state-of-the-art LLM, with those of students at an elite university. The study found that:\n\n1. ChatGPT-4 is significantly better (faster and cheaper) at generating new product ideas than motivated, trained engineering and business students at an elite university.\n2. The LLM ideas are of higher quality on average (as measured by purchase-intent surveys).\n3. The majority of the best ideas were generated by ChatGPT-4, not by the students: 35 of the top 40 ideas (**87.5%**) were generated by ChatGPT-4.\n4. ChatGPT-4 generated the highest-rated idea, with an 11% higher purchase probability than the best human idea.\n5. Providing ChatGPT-4 with a few examples of highly rated ideas further increased its performance.\n\nThe order of magnitude advantage in productivity itself of ChatGPT-4 is nearly insurmountable, and the higher quality of the best ideas further adds to the advantage of the LLM.\n\nTo understand this better let's dive deeper into what it means to be creative and innovative.\n\n## What do we mean by creativity?\n\nWhen it comes to creativity and innovation, for example, finding a new opportunity to improve the air travel experience, or launching a new aviation venture, an airline would prefer an ideator that generates _one brilliant idea_ and nine nonsense ideas over one that generates ten decent ideas.\n\nIn creative tasks, consistently good ideas are not as valuable as one single great idea, given that only a few ideas can be pursued. Note that an ideator that generates 30 ideas is statistically more likely to have one brilliant idea than an ideator that generates just 10. In creative problem-solving variability in quality, and high productivity (as reflected in the number of ideas generated) are more valuable than consistency.\n\nTo achieve _high variability_ and _high productivity_, most research on human ideation and brainstorming recommend generating many ideas while postponing evaluation or judgment. This is hard for human ideators to do (more on this below), but LLMs are designed to do exactly this— quickly generate many concepts without exercising much judgment. Further, the hallucinations and inconsistent behavior of LLMs increase the variability in quality, which improves the quality of the best ideas.\n\nFor ideation, _an LLM’s lack of judgment and inconsistency are features_, not bugs.\n\n## Why human brainstorming doesn't work very well\n\nHuman brainstorming sessions don't work as well as many people believe. Fewer ideas are generated, and the variability of the ideas is lower. Psychologists have several explanations for the challenges of group brainstorming:\n\n1. **Production blocking**: only one person can talk or produce an idea at once, while the other group members sit passively.\n2. **Evaluation apprehension**: meaning the fear of looking dumb in front of one’s peers.\n3. **Feasibility bias**: In a group setting people tend to filter their own ideas to those that are more \"feasible\" to make them more attractive to the group.\n4. **Social loafing**: in a group, some individuals tend to sit back and let others do the work. This could be due to introversion, not laziness.\n\nIndividual human ideation works better, where each member generates as many ideas as possible, _alone_. This results in both more ideas, and more variability. Those ideas can then be collected, collated, and reviewed in a group setting where the ideas are independent of the individual who submitted them. This creates more open dialog and deeper, richer group interactions. In other words, human groups are better at _reviewing_ ideas than _producing_ them.\n\n## Implications\n\nConventional wisdom prior to 2022 was that AI tools would likely be most useful in rote tasks and that creative work would likely remain the domain of humans. In many ways, the opposite is true of LLMs. Their lack of judgment, inconsistency, and occasional \"hallucinations\" lead to extreme productivity and high variance in idea quality -- resulting in higher overall creativity than the average human.\n\nOverall:\n\n- **Productivity Scale**: ChatGPT-4 > Many individual humans > Group brainstorming\n- **Variability Scale**: ChatGPT-4 > Many Individual humans > Group brainstorming\n\nThis research suggests that the critical human task in innovation practice may shift from idea _generation_ to idea _evaluation and selection_, a task for which LLMs do not yet appear to be particularly well suited.\n\nThe key to unlocking the full potential of both human ingenuity and generative AI creativity lies in collaboration and integration. By understanding and appreciating the unique strengths of each, we can explore innovative ways to merge the two. One can envision a future where human experience and generative AI creativity complement and inspire one another, ultimately enriching our collective creative endeavors.\n\n---\n\nImage Credit: **Midjourney AI**\n\n<span className=\"text-sm\">\n  (Prompt) \"realistic images, immersive vivid image depicting teams creating\n  with unlimited ideas and inspiration and data, creative, hex codes 292929\n  A642E1 5A72D8 6DE2CF EFC365 D04B5E, AI and tech, immersed in creation,\n  creative teams —ar 2:1\"\n</span>\n",
    "code": "var Component=(()=>{var sn=Object.create;var D=Object.defineProperty;var un=Object.getOwnPropertyDescriptor;var fn=Object.getOwnPropertyNames;var cn=Object.getPrototypeOf,mn=Object.prototype.hasOwnProperty;var B=(u,t)=>()=>(t||u((t={exports:{}}).exports,t),t.exports),bn=(u,t)=>{for(var p in t)D(u,p,{get:t[p],enumerable:!0})},xe=(u,t,p,y)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let v of fn(t))!mn.call(u,v)&&v!==p&&D(u,v,{get:()=>t[v],enumerable:!(y=un(t,v))||y.enumerable});return u};var hn=(u,t,p)=>(p=u!=null?sn(cn(u)):{},xe(t||!u||!u.__esModule?D(p,\"default\",{value:u,enumerable:!0}):p,u)),pn=u=>xe(D({},\"__esModule\",{value:!0}),u);var Te=B((Nn,Ne)=>{Ne.exports=React});var Ce=B(z=>{\"use strict\";(function(){\"use strict\";var u=Te(),t=Symbol.for(\"react.element\"),p=Symbol.for(\"react.portal\"),y=Symbol.for(\"react.fragment\"),v=Symbol.for(\"react.strict_mode\"),X=Symbol.for(\"react.profiler\"),H=Symbol.for(\"react.provider\"),K=Symbol.for(\"react.context\"),R=Symbol.for(\"react.forward_ref\"),I=Symbol.for(\"react.suspense\"),A=Symbol.for(\"react.suspense_list\"),V=Symbol.for(\"react.memo\"),F=Symbol.for(\"react.lazy\"),Ve=Symbol.for(\"react.offscreen\"),J=Symbol.iterator,Pe=\"@@iterator\";function ke(e){if(e===null||typeof e!=\"object\")return null;var n=J&&e[J]||e[Pe];return typeof n==\"function\"?n:null}var N=u.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function m(e){{for(var n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];Oe(\"error\",e,r)}}function Oe(e,n,r){{var o=N.ReactDebugCurrentFrame,d=o.getStackAddendum();d!==\"\"&&(n+=\"%s\",r=r.concat([d]));var s=r.map(function(l){return String(l)});s.unshift(\"Warning: \"+n),Function.prototype.apply.call(console[e],console,s)}}var je=!1,Se=!1,De=!1,Ie=!1,Ae=!1,Z;Z=Symbol.for(\"react.module.reference\");function Fe(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===y||e===X||Ae||e===v||e===I||e===A||Ie||e===Ve||je||Se||De||typeof e==\"object\"&&e!==null&&(e.$$typeof===F||e.$$typeof===V||e.$$typeof===H||e.$$typeof===K||e.$$typeof===R||e.$$typeof===Z||e.getModuleId!==void 0))}function Le(e,n,r){var o=e.displayName;if(o)return o;var d=n.displayName||n.name||\"\";return d!==\"\"?r+\"(\"+d+\")\":r}function Q(e){return e.displayName||\"Context\"}function _(e){if(e==null)return null;if(typeof e.tag==\"number\"&&m(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case y:return\"Fragment\";case p:return\"Portal\";case X:return\"Profiler\";case v:return\"StrictMode\";case I:return\"Suspense\";case A:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case K:var n=e;return Q(n)+\".Consumer\";case H:var r=e;return Q(r._context)+\".Provider\";case R:return Le(e,e.render,\"ForwardRef\");case V:var o=e.displayName||null;return o!==null?o:_(e.type)||\"Memo\";case F:{var d=e,s=d._payload,l=d._init;try{return _(l(s))}catch{return null}}}return null}var x=Object.assign,w=0,ee,ne,te,re,ie,oe,ae;function le(){}le.__reactDisabledLog=!0;function Me(){{if(w===0){ee=console.log,ne=console.info,te=console.warn,re=console.error,ie=console.group,oe=console.groupCollapsed,ae=console.groupEnd;var e={configurable:!0,enumerable:!0,value:le,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}w++}}function We(){{if(w--,w===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:x({},e,{value:ee}),info:x({},e,{value:ne}),warn:x({},e,{value:te}),error:x({},e,{value:re}),group:x({},e,{value:ie}),groupCollapsed:x({},e,{value:oe}),groupEnd:x({},e,{value:ae})})}w<0&&m(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var L=N.ReactCurrentDispatcher,M;function P(e,n,r){{if(M===void 0)try{throw Error()}catch(d){var o=d.stack.trim().match(/\\n( *(at )?)/);M=o&&o[1]||\"\"}return`\n`+M+e}}var W=!1,k;{var Ye=typeof WeakMap==\"function\"?WeakMap:Map;k=new Ye}function de(e,n){if(!e||W)return\"\";{var r=k.get(e);if(r!==void 0)return r}var o;W=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var s;s=L.current,L.current=null,Me();try{if(n){var l=function(){throw Error()};if(Object.defineProperty(l.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(l,[])}catch(g){o=g}Reflect.construct(e,[],l)}else{try{l.call()}catch(g){o=g}e.call(l.prototype)}}else{try{throw Error()}catch(g){o=g}e()}}catch(g){if(g&&o&&typeof g.stack==\"string\"){for(var a=g.stack.split(`\n`),b=o.stack.split(`\n`),f=a.length-1,c=b.length-1;f>=1&&c>=0&&a[f]!==b[c];)c--;for(;f>=1&&c>=0;f--,c--)if(a[f]!==b[c]){if(f!==1||c!==1)do if(f--,c--,c<0||a[f]!==b[c]){var h=`\n`+a[f].replace(\" at new \",\" at \");return e.displayName&&h.includes(\"<anonymous>\")&&(h=h.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&k.set(e,h),h}while(f>=1&&c>=0);break}}}finally{W=!1,L.current=s,We(),Error.prepareStackTrace=d}var C=e?e.displayName||e.name:\"\",ye=C?P(C):\"\";return typeof e==\"function\"&&k.set(e,ye),ye}function $e(e,n,r){return de(e,!1)}function Ge(e){var n=e.prototype;return!!(n&&n.isReactComponent)}function O(e,n,r){if(e==null)return\"\";if(typeof e==\"function\")return de(e,Ge(e));if(typeof e==\"string\")return P(e);switch(e){case I:return P(\"Suspense\");case A:return P(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case R:return $e(e.render);case V:return O(e.type,n,r);case F:{var o=e,d=o._payload,s=o._init;try{return O(s(d),n,r)}catch{}}}return\"\"}var j=Object.prototype.hasOwnProperty,se={},ue=N.ReactDebugCurrentFrame;function S(e){if(e){var n=e._owner,r=O(e.type,e._source,n?n.type:null);ue.setExtraStackFrame(r)}else ue.setExtraStackFrame(null)}function Ue(e,n,r,o,d){{var s=Function.call.bind(j);for(var l in e)if(s(e,l)){var a=void 0;try{if(typeof e[l]!=\"function\"){var b=Error((o||\"React class\")+\": \"+r+\" type `\"+l+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[l]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw b.name=\"Invariant Violation\",b}a=e[l](n,l,o,r,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(f){a=f}a&&!(a instanceof Error)&&(S(d),m(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",o||\"React class\",r,l,typeof a),S(null)),a instanceof Error&&!(a.message in se)&&(se[a.message]=!0,S(d),m(\"Failed %s type: %s\",r,a.message),S(null))}}}var qe=Array.isArray;function Y(e){return qe(e)}function Be(e){{var n=typeof Symbol==\"function\"&&Symbol.toStringTag,r=n&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return r}}function ze(e){try{return fe(e),!1}catch{return!0}}function fe(e){return\"\"+e}function ce(e){if(ze(e))return m(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",Be(e)),fe(e)}var E=N.ReactCurrentOwner,Xe={key:!0,ref:!0,__self:!0,__source:!0},me,be,$;$={};function He(e){if(j.call(e,\"ref\")){var n=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(n&&n.isReactWarning)return!1}return e.ref!==void 0}function Ke(e){if(j.call(e,\"key\")){var n=Object.getOwnPropertyDescriptor(e,\"key\").get;if(n&&n.isReactWarning)return!1}return e.key!==void 0}function Je(e,n){if(typeof e.ref==\"string\"&&E.current&&n&&E.current.stateNode!==n){var r=_(E.current.type);$[r]||(m('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',_(E.current.type),e.ref),$[r]=!0)}}function Ze(e,n){{var r=function(){me||(me=!0,m(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",n))};r.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:r,configurable:!0})}}function Qe(e,n){{var r=function(){be||(be=!0,m(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",n))};r.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:r,configurable:!0})}}var en=function(e,n,r,o,d,s,l){var a={$$typeof:t,type:e,key:n,ref:r,props:l,_owner:s};return a._store={},Object.defineProperty(a._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(a,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:o}),Object.defineProperty(a,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:d}),Object.freeze&&(Object.freeze(a.props),Object.freeze(a)),a};function nn(e,n,r,o,d){{var s,l={},a=null,b=null;r!==void 0&&(ce(r),a=\"\"+r),Ke(n)&&(ce(n.key),a=\"\"+n.key),He(n)&&(b=n.ref,Je(n,d));for(s in n)j.call(n,s)&&!Xe.hasOwnProperty(s)&&(l[s]=n[s]);if(e&&e.defaultProps){var f=e.defaultProps;for(s in f)l[s]===void 0&&(l[s]=f[s])}if(a||b){var c=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;a&&Ze(l,c),b&&Qe(l,c)}return en(e,a,b,d,o,E.current,l)}}var G=N.ReactCurrentOwner,he=N.ReactDebugCurrentFrame;function T(e){if(e){var n=e._owner,r=O(e.type,e._source,n?n.type:null);he.setExtraStackFrame(r)}else he.setExtraStackFrame(null)}var U;U=!1;function q(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===t}function pe(){{if(G.current){var e=_(G.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function tn(e){{if(e!==void 0){var n=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),r=e.lineNumber;return`\n\nCheck your code at `+n+\":\"+r+\".\"}return\"\"}}var _e={};function rn(e){{var n=pe();if(!n){var r=typeof e==\"string\"?e:e.displayName||e.name;r&&(n=`\n\nCheck the top-level render call using <`+r+\">.\")}return n}}function ge(e,n){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var r=rn(n);if(_e[r])return;_e[r]=!0;var o=\"\";e&&e._owner&&e._owner!==G.current&&(o=\" It was passed a child from \"+_(e._owner.type)+\".\"),T(e),m('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',r,o),T(null)}}function ve(e,n){{if(typeof e!=\"object\")return;if(Y(e))for(var r=0;r<e.length;r++){var o=e[r];q(o)&&ge(o,n)}else if(q(e))e._store&&(e._store.validated=!0);else if(e){var d=ke(e);if(typeof d==\"function\"&&d!==e.entries)for(var s=d.call(e),l;!(l=s.next()).done;)q(l.value)&&ge(l.value,n)}}}function on(e){{var n=e.type;if(n==null||typeof n==\"string\")return;var r;if(typeof n==\"function\")r=n.propTypes;else if(typeof n==\"object\"&&(n.$$typeof===R||n.$$typeof===V))r=n.propTypes;else return;if(r){var o=_(n);Ue(r,e.props,\"prop\",o,e)}else if(n.PropTypes!==void 0&&!U){U=!0;var d=_(n);m(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",d||\"Unknown\")}typeof n.getDefaultProps==\"function\"&&!n.getDefaultProps.isReactClassApproved&&m(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function an(e){{for(var n=Object.keys(e.props),r=0;r<n.length;r++){var o=n[r];if(o!==\"children\"&&o!==\"key\"){T(e),m(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",o),T(null);break}}e.ref!==null&&(T(e),m(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),T(null))}}function ln(e,n,r,o,d,s){{var l=Fe(e);if(!l){var a=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(a+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var b=tn(d);b?a+=b:a+=pe();var f;e===null?f=\"null\":Y(e)?f=\"array\":e!==void 0&&e.$$typeof===t?(f=\"<\"+(_(e.type)||\"Unknown\")+\" />\",a=\" Did you accidentally export a JSX literal instead of a component?\"):f=typeof e,m(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",f,a)}var c=nn(e,n,r,d,s);if(c==null)return c;if(l){var h=n.children;if(h!==void 0)if(o)if(Y(h)){for(var C=0;C<h.length;C++)ve(h[C],e);Object.freeze&&Object.freeze(h)}else m(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else ve(h,e)}return e===y?an(c):on(c),c}}var dn=ln;z.Fragment=y,z.jsxDEV=dn})()});var Ee=B((Cn,we)=>{\"use strict\";we.exports=Ce()});var yn={};bn(yn,{default:()=>vn,frontmatter:()=>_n});var i=hn(Ee()),_n={title:\"ChatGPT-4 is More Creative than You\",excerpt:\"We think that generative AI creativity is limited by its training data and algorithms, and therefore can produce technically proficient content, but not truly novel and innovative content. We like to believe that our own creativity and innovation, rooted in personal experience, knowledge, and human emotions results in intentionality and emotional depth that cannot be replicated by AI. Current research contradicts that view.\",coverImage:\"/assets/blog/img/brainstorming2.jpg\",date:\"2023-08-01\",published:!0,author:{name:\"Dan Stroot\",picture:\"/assets/blog/authors/dan.jpeg\"},ogImage:{url:\"/assets/blog/img/brainstorming2.jpg\"},seoURL:null};function Re(u){let t=Object.assign({p:\"p\",a:\"a\",ol:\"ol\",li:\"li\",strong:\"strong\",h2:\"h2\",em:\"em\",ul:\"ul\",hr:\"hr\"},u.components);return(0,i.jsxDEV)(i.Fragment,{children:[(0,i.jsxDEV)(t.p,{children:\"We think that generative AI creativity is limited by its training data and algorithms, and therefore can produce technically proficient content, but not truly novel and innovative content. We like to believe that our own creativity and innovation, rooted in personal experience, knowledge, and human emotions results in intentionality and emotional depth that cannot be replicated by AI. Current research contradicts that view.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:15,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.p,{children:[\"For example, a recent \",(0,i.jsxDEV)(t.a,{href:\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4526071\",children:\"Wharton study\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:17,columnNumber:23},this),\" that compared the ideation capabilities of ChatGPT-4, a 2023 state-of-the-art LLM, with those of students at an elite university. The study found that:\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:17,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.ol,{children:[`\n`,(0,i.jsxDEV)(t.li,{children:\"ChatGPT-4 is significantly better (faster and cheaper) at generating new product ideas than motivated, trained engineering and business students at an elite university.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:19,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.li,{children:\"The LLM ideas are of higher quality on average (as measured by purchase-intent surveys).\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:20,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.li,{children:[\"The majority of the best ideas were generated by ChatGPT-4, not by the students: 35 of the top 40 ideas (\",(0,i.jsxDEV)(t.strong,{children:\"87.5%\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:21,columnNumber:109},this),\") were generated by ChatGPT-4.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:21,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.li,{children:\"ChatGPT-4 generated the highest-rated idea, with an 11% higher purchase probability than the best human idea.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:22,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.li,{children:\"Providing ChatGPT-4 with a few examples of highly rated ideas further increased its performance.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:23,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:19,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.p,{children:\"The order of magnitude advantage in productivity itself of ChatGPT-4 is nearly insurmountable, and the higher quality of the best ideas further adds to the advantage of the LLM.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:25,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.p,{children:\"To understand this better let's dive deeper into what it means to be creative and innovative.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:27,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.h2,{id:\"what-do-we-mean-by-creativity\",children:\"What do we mean by creativity?\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:29,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.p,{children:[\"When it comes to creativity and innovation, for example, finding a new opportunity to improve the air travel experience, or launching a new aviation venture, an airline would prefer an ideator that generates \",(0,i.jsxDEV)(t.em,{children:\"one brilliant idea\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:31,columnNumber:209},this),\" and nine nonsense ideas over one that generates ten decent ideas.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:31,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.p,{children:\"In creative tasks, consistently good ideas are not as valuable as one single great idea, given that only a few ideas can be pursued. Note that an ideator that generates 30 ideas is statistically more likely to have one brilliant idea than an ideator that generates just 10. In creative problem-solving variability in quality, and high productivity (as reflected in the number of ideas generated) are more valuable than consistency.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:33,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.p,{children:[\"To achieve \",(0,i.jsxDEV)(t.em,{children:\"high variability\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:35,columnNumber:12},this),\" and \",(0,i.jsxDEV)(t.em,{children:\"high productivity\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:35,columnNumber:35},this),\", most research on human ideation and brainstorming recommend generating many ideas while postponing evaluation or judgment. This is hard for human ideators to do (more on this below), but LLMs are designed to do exactly this\\u2014 quickly generate many concepts without exercising much judgment. Further, the hallucinations and inconsistent behavior of LLMs increase the variability in quality, which improves the quality of the best ideas.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:35,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.p,{children:[\"For ideation, \",(0,i.jsxDEV)(t.em,{children:\"an LLM\\u2019s lack of judgment and inconsistency are features\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:37,columnNumber:15},this),\", not bugs.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:37,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.h2,{id:\"why-human-brainstorming-doesnt-work-very-well\",children:\"Why human brainstorming doesn't work very well\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:39,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.p,{children:\"Human brainstorming sessions don't work as well as many people believe. Fewer ideas are generated, and the variability of the ideas is lower. Psychologists have several explanations for the challenges of group brainstorming:\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:41,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.ol,{children:[`\n`,(0,i.jsxDEV)(t.li,{children:[(0,i.jsxDEV)(t.strong,{children:\"Production blocking\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:43,columnNumber:4},this),\": only one person can talk or produce an idea at once, while the other group members sit passively.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:43,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.li,{children:[(0,i.jsxDEV)(t.strong,{children:\"Evaluation apprehension\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:44,columnNumber:4},this),\": meaning the fear of looking dumb in front of one\\u2019s peers.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:44,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.li,{children:[(0,i.jsxDEV)(t.strong,{children:\"Feasibility bias\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:45,columnNumber:4},this),': In a group setting people tend to filter their own ideas to those that are more \"feasible\" to make them more attractive to the group.']},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:45,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.li,{children:[(0,i.jsxDEV)(t.strong,{children:\"Social loafing\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:46,columnNumber:4},this),\": in a group, some individuals tend to sit back and let others do the work. This could be due to introversion, not laziness.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:46,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:43,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.p,{children:[\"Individual human ideation works better, where each member generates as many ideas as possible, \",(0,i.jsxDEV)(t.em,{children:\"alone\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:48,columnNumber:96},this),\". This results in both more ideas, and more variability. Those ideas can then be collected, collated, and reviewed in a group setting where the ideas are independent of the individual who submitted them. This creates more open dialog and deeper, richer group interactions. In other words, human groups are better at \",(0,i.jsxDEV)(t.em,{children:\"reviewing\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:48,columnNumber:419},this),\" ideas than \",(0,i.jsxDEV)(t.em,{children:\"producing\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:48,columnNumber:442},this),\" them.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:48,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.h2,{id:\"implications\",children:\"Implications\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:50,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.p,{children:'Conventional wisdom prior to 2022 was that AI tools would likely be most useful in rote tasks and that creative work would likely remain the domain of humans. In many ways, the opposite is true of LLMs. Their lack of judgment, inconsistency, and occasional \"hallucinations\" lead to extreme productivity and high variance in idea quality -- resulting in higher overall creativity than the average human.'},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:52,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.p,{children:\"Overall:\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:54,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.ul,{children:[`\n`,(0,i.jsxDEV)(t.li,{children:[(0,i.jsxDEV)(t.strong,{children:\"Productivity Scale\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:56,columnNumber:3},this),\": ChatGPT-4 > Many individual humans > Group brainstorming\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:56,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.li,{children:[(0,i.jsxDEV)(t.strong,{children:\"Variability Scale\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:57,columnNumber:3},this),\": ChatGPT-4 > Many Individual humans > Group brainstorming\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:57,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:56,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.p,{children:[\"This research suggests that the critical human task in innovation practice may shift from idea \",(0,i.jsxDEV)(t.em,{children:\"generation\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:59,columnNumber:96},this),\" to idea \",(0,i.jsxDEV)(t.em,{children:\"evaluation and selection\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:59,columnNumber:117},this),\", a task for which LLMs do not yet appear to be particularly well suited.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:59,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.p,{children:\"The key to unlocking the full potential of both human ingenuity and generative AI creativity lies in collaboration and integration. By understanding and appreciating the unique strengths of each, we can explore innovative ways to merge the two. One can envision a future where human experience and generative AI creativity complement and inspire one another, ultimately enriching our collective creative endeavors.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:61,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.hr,{},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:63,columnNumber:1},this),`\n`,(0,i.jsxDEV)(t.p,{children:[\"Image Credit: \",(0,i.jsxDEV)(t.strong,{children:\"Midjourney AI\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:65,columnNumber:15},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:65,columnNumber:1},this),`\n`,(0,i.jsxDEV)(\"span\",{className:\"text-sm\",children:(0,i.jsxDEV)(t.p,{children:`(Prompt) \"realistic images, immersive vivid image depicting teams creating\nwith unlimited ideas and inspiration and data, creative, hex codes 292929\nA642E1 5A72D8 6DE2CF EFC365 D04B5E, AI and tech, immersed in creation,\ncreative teams \\u2014ar 2:1\"`},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:68,columnNumber:3},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:67,columnNumber:1},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\",lineNumber:1,columnNumber:1},this)}function gn(u={}){let{wrapper:t}=u.components||{};return t?(0,i.jsxDEV)(t,Object.assign({},u,{children:(0,i.jsxDEV)(Re,u,void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\"},this)}),void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-c6d782cf-24fd-4941-b4b0-df28f2179b29.mdx\"},this):Re(u)}var vn=gn;return pn(yn);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "posts/2023-08-01-chatgpt-4-is-more-creative-than-you.mdx",
  "_raw": {
    "sourceFilePath": "posts/2023-08-01-chatgpt-4-is-more-creative-than-you.mdx",
    "sourceFileName": "2023-08-01-chatgpt-4-is-more-creative-than-you.mdx",
    "sourceFileDir": "posts",
    "contentType": "mdx",
    "flattenedPath": "posts/2023-08-01-chatgpt-4-is-more-creative-than-you"
  },
  "type": "Post",
  "slug": "/posts/2023-08-01-chatgpt-4-is-more-creative-than-you",
  "slugAsParams": "2023-08-01-chatgpt-4-is-more-creative-than-you",
  "stats": {
    "text": "5 min read",
    "minutes": 4.365,
    "time": 261900,
    "words": 873
  }
}