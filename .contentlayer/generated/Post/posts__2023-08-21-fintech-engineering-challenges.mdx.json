{
  "title": "Fintech Engineering Challenges",
  "excerpt": "Having worked in financial services for most of my career I want to share some the software engineering challenges that are associated with tracking and moving money digitally. Most of these lessons have been learned the hard way. Hopefully they will be useful to anyone moving into the fintech space.",
  "coverImage": "/assets/blog/img/fintech.jpg",
  "date": "2023-08-21T00:00:00.000Z",
  "published": true,
  "author": {
    "name": "Dan Stroot",
    "picture": "/assets/blog/authors/dan.jpeg",
    "type": "Author",
    "_raw": {}
  },
  "ogImage": {
    "url": "/assets/blog/img/fintech.jpg",
    "type": "OGImage",
    "_raw": {}
  },
  "seoURL": null,
  "body": {
    "raw": "\nHaving worked in financial services/fintech for most of my career I want to share some the software engineering challenges that are associated with tracking and moving money digitally. Most of these lessons have been learned the hard way. Hopefully they will be useful to anyone moving into the fintech space.\n\nNote: I am intentionally ignoring the broad topic of \"security\" because that alone is a much longer article - however some of the items below are strong controls and help with security. Good design patterns help with both challenges.\n\n## Table of Contents\n\n| No. | Section                                  |\n| --- | ---------------------------------------- |\n| 1   | [Significant Digits/Rounding](#1)        |\n| 2   | [Ledgers, Accounts and Transactions](#2) |\n| 3   | [Reporting Periods](#reporting-periods)  |\n| 4   | [Reconciliation](#4)                     |\n| 5   | [Transaction States](#5)                 |\n| 6   | [Immutability](#6)                       |\n| 7   | [Currency Codes](#7)                     |\n| 8   | [Time/Timestamps](#8)                    |\n| 9   | [Retry Logic](#9)                        |\n| 10  | [Architecture](#10)                      |\n| 11  | [Identity Management](#11)               |\n| 11  | [Testing and Release Management](#12)    |\n| 12  | [Application Monitoring](#13)            |\n\n## <a name='1'></a>Significant Digits/Rounding\n\nThis is so critical that I once wrote a whitepaper on this topic alone. When floating point numbers (numbers that have a decimal point) are represented in binary, they lose precision. For example, ten cents (0.10) in binary is a repeating binary number that goes on forever like this: 0.000110011001100110011001100110011001100110011001100110011...\n\nIf you use floating point numbers to represent currency, computers will have to round them, and the rounding errors will add up and become noticeable, even substantial. Start with $10.00 USD and divide it equally into three payments, rounded to two decimals - you will have three $3.33 transactions. Add them back up and you have $9.99, not $10.00. You made a penny disappear into thin air (0.1% of the total value!).\n\nCurrency math is more closely related to integer math than it is to floating point math. Rounding errors on addition and subtraction are not allowed and division/multiplication should never create more accuracy than the original values. If money needs to be divided, and division isn&apos;t even, rounding should be apportioned according to well-understood business rules. In other words, in the example above you should end up with three transactions, two for $3.33 and one for $3.34. This is best accomplished with a well-tested [currency math library](https://metacpan.org/pod/Math::Currency) in your chosen language. Do not attempt to write this yourself.\n\nNotes:\n\n- How you _store_ monetary values is a key decision and has to align with your currency math library. For accounting applications it's very common to store values as integers (e.g., use `BigInt`) in the database. For example, take the amount of the transaction (let's suppose $100.23) and multiply by 100, 1000, 10000, etc. to get the accuracy you need. If you only need to store USD just multiply by 100 (but note many currencies have more than two digits after the decimal). In the example, you would store the integer 10023. You'll save space in the database and comparing two integers doesn't have the gotcha's of comparing two floats. Many recommend `Decimal(19,4)`. Some relational databases, such as Postgres, support a `Money` type but then you are wedded to that specific database.\n\n- When using JSON to pass monetary quantities (e.g., from the frontend to the backend) use integers like [Stripe](https://stripe.com/docs/api/prices/create#create_price-unit_amount) and [Square](https://developer.squareup.com/reference/square/objects/Money). Otherwise, consider putting the values in strings - you never know what the serializers and deserializers across languages will do to your numbers.\n\n- When processing currency values you need to strip currency formatting and standardize the decimal. Great Britain and the United States are two of the few places in the world that use a period to indicate the decimal place. Many other countries use a comma instead - and three digits after the decimal instead of two. The decimal separator is also called the _radix character_. Likewise, while the U.K. and U.S. use a comma to separate groups of thousands, many other countries use a period, and some countries separate thousands with a thin space. You need libraries that can encode and decode human-readable values for each currency. You also need to be able to convert currency codes to currency symbols.\n\n- This isn't specific to currency but sometimes what you think is a \"number\" isn't. You often need to use strings. If you need to store a bank account number like “01234567789” it will have the leading zero stripped if you use a numeric type.\n\n## <a name='2'></a>Ledgers, Accounts and Transactions\n\nThe core concept of most financial systems is a current value which is changed via \"transactions\". We can model this as an \"account\" table and a \"transaction\" table. When a new account is created it has a value of zero. The account value is then updated via transactions (events) and reflects the current state. The transactions are stored for the lifetime as the account, along with precise timestamps so we know the sequence they were applied.\n\nMartin Fowler calls this pattern [Event Sourcing](https://martinfowler.com/eaaDev/EventSourcing.html):\n\n> The fundamental idea of Event Sourcing is that of ensuring every change to the state of an application is captured in an event object, and that these event objects are themselves stored in the sequence they were applied for the same lifetime as the application state itself.\n>\n> <cite>&mdash; Martin Fowler, Event Sourcing</cite>\n\nWe should always be able to start at zero, re-apply the transactions in order, and arrive at the same current account state. However, what happens we have millions of accounts and billions of transactions? Can we easily and quickly validate our account values? How can we spot errors?\n\nThis is where **double entry accounting** comes into play. Double-entry accounting originated in the 13th century in Italy to ensure the accuracy of banking and financial records. In a double-entry system, the amounts recorded as debits _must always be equal_ to the amounts recorded as credits.\n\n“Use a double-entry ledger” is probably the most valuable advice I could have sent myself prior to getting into fintech because it allows you to _reconcile all your data all the time_.\n\nIn fact, the term \"balance\" comes from double entry accounting - credits must always balance with debits. Thus, every transaction is _balanced_ – it sums to zero. For example, if we sell a $100 widget but haven't been paid yet, we are owed $100, and we have $100 in revenue:\n\n| Ledger Account                                   | Debit       | Credit      |\n| ------------------------------------------------ | ----------- | ----------- |\n| balance_sheet.current_assets.accounts_receivable | $100.00     | $0          |\n| profit_loss.revenue.general                      | $0          | $100.00     |\n| **Balance**                                      | **$100.00** | **$100.00** |\n\nTo understand this further let's introduce some terms:\n\n- **Ledger**: A ledger contains accounts and journal (bookkeeping) entries. Every business has one ledger for itself internally. You can also have external ledgers. A bank account is an example of an external ledger.\n\n- **Account**: Ledger accounts categorize the money flowing through the ledger. It is modelled like a tree, with the topmost levels pointing to the balance sheet or profit-loss statement. The second level points to items on the reports. The lower levels are customizable. Examples of common ledger accounts are revenue, accounts receivable, and accounts payable.\n\n- **Journal entry**: this is a single record in the ledger, comparable to a row in a table. It reflects the actual money movement between ledger accounts. This is what we would consider a transaction, or Martin Fowler would call an \"event\".\n\n- **Credits and Debits**: A debit is an entry that is created to indicate either an increase in assets or a decrease in liabilities on a business&apos;s balance sheet. Credits, on the other hand, work in the opposite way - they are mirrors of one another.\n\nIf we are correctly handling transactions via a ledger, we can make sure we are **always in balance**. This is a critical control.\n\n## Reporting Periods\n\nWhen reporting financial results, we have the concept of a period \"close\". For example, in an accounting system there are monthly, quarterly, and annual closes. The goal is that financial reporting should be immutable and idempotent: Close your periods and generate reports for them, and if/when you regenerate the report it must be identical.\n\nOnce a period is closed new transactions cannot affect it - it should be effectively immutable after being closed, except we must handle the edge case of re-opening periods.\n\nIf an \"as of\" (late) transaction arrives for a date/time in a closed period, the period may be re-opened and closed again after the transaction is posted. This can be quite complex as it also requires subsequent transactions to be reversed and re-applied, plus it requires restating the period results, and requires new financial reports to be issued. This is typically done for material transactions only.\n\nFor non-material transactions, the \"as-of\" transaction is posted to the first moment of the current open period instead. In this example the transaction date/time and posting date/time will be different. The transaction date could be September 23rd but posted on October 1st (the first day of the open period.) This also requires any subsequent transactions to be reversed and re-applied.\n\n## <a name='4'></a> Reconciliation\n\n> Reconciliation: A game designed to frustrate the player.\n\nReconciliation is a business process which arises almost entirely because of a lack of structured data and controls in the pipelines that convey money between businesses or people. Because of this, to a greater or lesser degree worldwide, many people must spend a great deal of time every month reconciling incoming payments to invoices or other money movement.\n\nBecause of technological and organizational barriers, the people who do this work (in Accounts Payable, or Operations, or any other seat at the company) often do not have direct visibility into the customer relationships or the full transaction details which gave rise to the invoice, or payment. Money movement is today, after all, just a message between parties related to some type of contract or event. Reconciliation is a business process which arises almost entirely because of a lack of structured data in the pipelines that convey money between businesses.\n\nFor the last several hundred years, these have followed a very well-understood dance. A deal is struck. The exact amount of compensation is decided upon and memorialized by the sender in an invoice. The purchaser receives the invoice, reads it, then wraps money around a metaphorical brick and throws it through a metaphorical window. Someone on the other side of the window then applies forensic science to the question of what caused this particular brick to arrive.\n\nHumans should not be involved in performing reconciliation. They should only be involved in investigating reconciliation issues/errors. My advice is design and **build automated reconciliation into your system from the start**.\n\nThe implications are straightforward: this lowers the total cost of payments by eliminating human effort, which is expensive, and human errors, which are expensive and numerous. An underappreciated consequence is that freeing people from drudgery gives them the ability to do more important, meaningful work. However, reconciliation is complicated by the many states that financial transactions may be in.\n\n## <a name='5'></a>Transaction States\n\nFinancial transactions have many different states. For example, credit card payment states can be authorized, cleared, voided, returned, declined, etc. It can be tempting to just go ahead an update the state on the transaction record. **Don't do that!** Instead, each state change should have its own immutable record, tracking transaction state changes over time.\n\nYou will need transaction state auditability. Auditors looking at a financial system need to trust that every entry in the ledger was made at a specific time and has not been manipulated in any way. “Updating transactions” would be better phrased to an architect as “use an append-only log / event architecture”. Also, it is very beneficial to design and build your transaction state libraries around a \"state machine\" that enforces the business rules of state changes.\n\nBusiness rules are a pit of alligators, but some types of logical validation should be built into your transaction posting logic. If you sell widgets that range from $10.00 to $1,000 USD, should you expect to see a sales transaction for $10 million dollars? Or, one for a penny? At the very least these transactions should be flagged for review.\n\nYou should build data quality rules on top of your data storage. Data quality rules typically fall into one of six dimensions: accuracy, completeness, consistency, timeliness, validity, and uniqueness. Validity rules such as \"can't be null\", \"can't be less than zero\", and \"must be in this range\" can highlight suspect data quickly.\n\n## <a name='6'></a>Immutability\n\nI have mentioned immutable data like transactions and transaction state changes several times now. There are other key benefits to having data be immutable - as an example, ransomware cannot corrupt or encrypt immutable data. Also, immutable data can be optimized for \"write once, read many\" access so it can be more performant.\n\nThis also helps with auditability, information security, and controls. Auditors, CISO's and regulators love immutable data.\n\n## <a name='7'></a>Currency Codes\n\n**Never** record an amount without its associated currency code. Use [ISO standard codes](https://www.iso.org/iso-4217-currency-codes.html). For example, the Swiss franc is represented by CHF – the CH being the code for Switzerland in the ISO 3166 code and F for franc.\n\nDon't be tempted to use currency symbols - they not unique. The Australian dollar, Mexican Peso, Singapore Dollar, and US Dollar all use \"$\". Trust me - use ISO standard currency codes.\n\nAll amounts/values need a corresponding currency code, _everywhere_. In addition, transactions will also need accurate timestamps for many reasons (e.g., to find the most accurate exchange rate).\n\n## <a name='8'></a>Time/Timestamps\n\n**Never** record a transaction without an accurate timestamp. Timestamps and time synchronization are incredibly important in fintech applications for several reasons:\n\n1. _Transaction Ordering:_ Financial transactions need to be processed in the order they were initiated. This is especially crucial in high-frequency trading where trades are often made in milliseconds or microseconds. A small difference in timing could potentially lead to substantial financial gains or losses. Therefore, accurate time synchronization ensures order in the execution of these transactions.\n\n2. _Security:_ Accurate timekeeping helps in maintaining security. For instance, time-based one-time passwords (TOTPs) are widely used in two-factor authentication systems. These passwords are valid only for a short period of time and rely on synchronized clocks on the server and client side.\n\n3. _Audit Trails and Dispute Resolution:_ Timestamping transactions can help create a precise audit trail, which is critical for detecting and investigating fraudulent activities. In case of any dispute, a detailed and accurate transaction history backed by synchronized time can help resolve the issue.\n\n4. _Distributed Processing:_ fintech systems must scale, and in order to scale and maintain reliability they are architected as distributed systems. In distributed systems, time synchronization is important to ensure data consistency. Many financial systems are distributed over different geographical locations, and transactions need to be coordinated between these systems in an orderly fashion. This requires all servers to have their clocks synchronized.\n\nThink of \"currency\" as three seperate components: (_currency code, decimal amount, and timestamp_).\n\nOther considerations:\n\n1. Use TIMESTAMPTZ. Always. The timestamptz datatype is a time zone-aware date and time data type. Furthermore, even for “date fields” consider using a timestamptz. Every date implicitly exists in a timezone, and if you ignore that you&apos;ll get bitten later.\n2. When you&apos;re using JSON to pass around datetime data, Use ISO8601 date and time with offset info, **always**. E.g., \"transaction_timestamp\": \"2023‐06‐28T15:55:22.511Z\".\n3. Use UTC everywhere, even when you find you can't use it _everywhere_.\n4. Another important one to think about is bitemporality. “Created at” vs “effective at”. Not obvious at first, and you&apos;ll need to build it in. Fowler has a good overview [here](https://martinfowler.com/eaaDev/timeNarrative.html).\n\n## <a name='9'></a>Retry Logic\n\nThere are many places in fintech where we want \"exactly once\" transaction processing. Consider API calls: what if we were designing an API endpoint to charge a customer money; accidentally calling it twice would lead to the customer being double charged.\n\nThis is where idempotency keys come into play. When performing an API request, or a transaction, the client generates a unique ID to identify just that operation and sends it up to the server along with the normal payload. The server receives the ID and correlates it with the state of the request on its end. If the client notices a failure, it retries the request _with the same ID_, and from there it’s up to the server to figure out what to do with it.\n\n- On retrying a connection failure, on the second request the server will see the ID for the first time and process it normally.\n- On a failure midway through an operation, the exact behavior is heavily dependent on implementation, but if the previous operation was successfully rolled back by way of an ACID database, it’ll be safe to retry it.\n- On a response failure (i.e., the operation executed successfully, but the client couldn’t get the result), the server simply replies with a cached result of the successful operation.\n\n“Be careful with retry” should be more strictly “use idempotent operations” and link to the canonical Stripe article on [idempotency](https://stripe.com/blog/idempotency).\n\n## <a name='10'></a>Architecture\n\nA well-designed architecture not only ensures optimal performance and scalability but also addresses critical concerns of security, compliance, and user experience. This article provides some clear, high-level advice.\n\n1. **Study any and all code** you can get your hands on first. For example, a great open source banking core having many of the strengths listed is [Apache Fineract](https://github.com/apache/fineract/). Also check out the links in the References section below.\n\n2. **Model your processes**. One of the best to keep complexity in check is to model processes as state machines (with the state itself being persisted to DB). State machines can be formally tested. By modelling your systems, you will learn what the important failure modes are and you will get better at designing systems that are resilient and efficient.\n\n3. **Use formal methods.** Harnessing the capabilities of formal software architecture design methodologies offers a structured approach to conceptualizing, designing, and implementing complex financial systems, ensuring robustness, reliability, and adherence to industry standards. Complex fintech projects involve multidisciplinary teams. Formal architectures provide a shared language and understanding, enhancing collaboration among developers, architects, domain experts, and business stakeholders. Incorporating formal architecture or design methods into fintech endeavors is an investment in long-term success.\n\n4. **Use proven design patterns**. Queues, retries, event sourcing, payment state handling -- we live in a concurrent world with network failures and our system will need to gracefully handle outages. Vendors will have errors and outages too. Use design patterns that help with robustness and reliability.\n\n   Card payment systems are basically unreliable peer-to-peer messaging systems. Be prepared for a lot of complexity. Using an event-sourcing architecture is useful here for that \"auditing\" requirement and for debugging transaction state when the network sends you messages in error, out of order, or they forget to retry themselves when they promised to, when merchants send bad data, when POS systems do weird things, etc. Your partners **will** send you bad data - be prepared to validate all input data thoroughly and have strategies in place for when it's wrong.\n\n5. **Use well designed, tested, and trusted componentry**. The libraries and SDKs you will need to use will become a large, critical part of your overall technology stack and some of these decisions will be very difficult to unwind if they don't work out. Knowing how to wrap and use third party libraries for things like DOCv step up, remote deposit capture, and security features is table stakes. If your stack choices make this challenging you're going to have a hard time for a long time.\n\n6. **Formalize your testing strategy and code coverage epectations**. It's nearly impossible to be successful with lightweight, informal testing strategies employed by busy software teams. Yes, you will be tempted to \"move fast\" and use prototypes, etc. But if you don't build in robust automated testing from the start along with methods of managing test data you will have a hard time.\n\nOther considerations:\n\n- Maker-checker is a powerful concept. Embrace it to the fullest across your system.\n- You will be dealing with all sorts of non-standardized financial integrations. A lot. Think [adapter pattern](https://refactoring.guru/design-patterns/adapter/typescript/example) as early as possible.\n- You will likely be answering to multiple regulatory agencies. Create boundaries between them within your system and reduce the surface of compliance as much as possible.\n- Be paranoid about race conditions / serialization anomalies.\n- Use immutable storage where possible (this also protects from ransomware).\n\n## <a name='11'></a>Identity Management\n\nFinancial systems attract fraud. One of the best ways to combat fraud is having robust ways to determine that someone is who they claim to be, and that they are a human. Identity management is the bedrock upon which the entire financial ecosystem is built, offering protection against fraud and ensuring the overall robustness of the ecosystem. Identity theft, account takeovers, and fraudulent transactions are just a few examples of the threats that financial institutions face. Identity management acts as a bulwark against these threats.\n\nThe financial ecosystem is a complex network of institutions, customers, partners, and regulators. The integrity of this ecosystem relies heavily on the accurate identification and verification of all participants. Identity management plays a crucial role in maintaining the trust and credibility that underpin financial transactions. By establishing a reliable and secure means of confirming identities, financial institutions can confidently interact with each other, customers can trust the services they receive, and regulators can ensure compliance with relevant laws and regulations.\n\nThis is where a partner like [Socure](https://www.socure.com/) can help - this is very hard to get right and takes lots of design and build time to get right. My advice is not to do this yourself.\n\n## <a name=\"12\"></a>Testing and Release Management\n\nDeciding how to configure environments — dev, test, prod, etc. — and how to ensure they are running properly can be rough in any organization. In fintech, when **real money** moves on prod, and core functionality depends on numerous third-party integrations, it is very challenging. This article is not the place to explain how to do it, but there are three common mistakes to avoid.\n\n1. Many companies have a confusing or poorly documented path from test to production for third party integrators. Make this path clear, and while you&apos;re at it, do a risk analysis on whether it could ever be possible for a third party to connect to the wrong environment without catching their own mistake.\n\n2. Plan for every important configuration of your production environment to be testable. Testability might require multiple test merchants and test accounts that move real money. You never know when you need to double check that the plumbing is working. Face it: [You Test in Prod](https://increment.com/testing/i-test-in-production/).\n\n3. An often-overlooked requirement is to be able to ensure that the production environment is doing error handling properly. The thing about production systems is that they&apos;re not supposed to have errors, so you can&apos;t see how they perform under error conditions unless you can force errors to happen.\n\n## <a name='13'></a>Application Monitoring\n\nYour application will need a full suite of application metrics that need to be defined **up front** and engineered into the application. Deploying to a public cloud like AWS means that some infrastructure monitoring can be added quickly and almost as an afterthought, but _application_ monitoring cannot.\n\nOn day one of your launch, the CEO will want to know things like how many transactions are being processed and what their total dollar amount is. Another thing that tends to happen early in the life of a fintech is that there will be a drop-off between signups and usage, and someone on the product team will start asking if users are experiencing errors. Be ready with good application monitoring to be able to answer these kinds of questions.\n\nWhat metrics signal fraud attempts? From day one you will have to be vigilant about fraud patterns in your application. Make sure you monitoring on user activity for the inevitable questions that will be coming your way.\n\n### References\n\n- [Double-entry accounting for software engineers](https://www.balanced.software/double-entry-bookkeeping-for-programmers/)\n- [Storing Money and Float Precision](https://lashewi.medium.com/storing-currency-values-and-float-precision-99029c1e8b71)\n- [Event Sourcing](https://martinfowler.com/eaaDev/EventSourcing.html)\n- [Decimal and Thousands Separators](https://docs.oracle.com/cd/E19455-01/806-0169/overview-9/index.html)\n- [Books, an immutable double-entry accounting database service](https://developer.squareup.com/blog/books-an-immutable-double-entry-accounting-database-service/)\n- [Double-entry Bookkeeping for Programmers](https://dev.to/kallmanation/double-entry-bookkeeping-for-programmers-3ok9)\n- [An Engineer's Guide to Double-Entry Bookkeeping](https://anvil.works/blog/double-entry-accounting-for-engineers)\n- [Things I Wish I Knew Before Building a Ledger](https://www.andriosrobert.com/p/things-i-wish-i-knew-before-building)\n- [Twisp - The core accounting engine to power any financial product](https://www.twisp.com)\n- [An Elegant DB Schema for Double-Entry Accounting](https://blog.journalize.io/posts/an-elegant-db-schema-for-double-entry-accounting/)\n- [Uber Ledger on DynamoDB and S3](https://www.youtube.com/watch?v=iN6mhI5hFt4&t=45s)\n- [Reconciliation: A game designed to frustrate the player](https://www.bitsaboutmoney.com/archive/a-game-that-intentionally-frustrates-the-player/)\n",
    "code": "var Component=(()=>{var sn=Object.create;var A=Object.defineProperty;var un=Object.getOwnPropertyDescriptor;var mn=Object.getOwnPropertyNames;var cn=Object.getPrototypeOf,fn=Object.prototype.hasOwnProperty;var L=(u,e)=>()=>(e||u((e={exports:{}}).exports,e),e.exports),bn=(u,e)=>{for(var _ in e)A(u,_,{get:e[_],enumerable:!0})},ye=(u,e,_,g)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let N of mn(e))!fn.call(u,N)&&N!==_&&A(u,N,{get:()=>e[N],enumerable:!(g=un(e,N))||g.enumerable});return u};var hn=(u,e,_)=>(_=u!=null?sn(cn(u)):{},ye(e||!u||!u.__esModule?A(_,\"default\",{value:u,enumerable:!0}):_,u)),_n=u=>ye(A({},\"__esModule\",{value:!0}),u);var ve=L((Tn,Te)=>{Te.exports=React});var Ce=L(H=>{\"use strict\";(function(){\"use strict\";var u=ve(),e=Symbol.for(\"react.element\"),_=Symbol.for(\"react.portal\"),g=Symbol.for(\"react.fragment\"),N=Symbol.for(\"react.strict_mode\"),G=Symbol.for(\"react.profiler\"),K=Symbol.for(\"react.provider\"),X=Symbol.for(\"react.context\"),k=Symbol.for(\"react.forward_ref\"),P=Symbol.for(\"react.suspense\"),F=Symbol.for(\"react.suspense_list\"),E=Symbol.for(\"react.memo\"),j=Symbol.for(\"react.lazy\"),Ee=Symbol.for(\"react.offscreen\"),J=Symbol.iterator,Re=\"@@iterator\";function Se(t){if(t===null||typeof t!=\"object\")return null;var o=J&&t[J]||t[Re];return typeof o==\"function\"?o:null}var T=u.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function f(t){{for(var o=arguments.length,a=new Array(o>1?o-1:0),i=1;i<o;i++)a[i-1]=arguments[i];Oe(\"error\",t,a)}}function Oe(t,o,a){{var i=T.ReactDebugCurrentFrame,d=i.getStackAddendum();d!==\"\"&&(o+=\"%s\",a=a.concat([d]));var s=a.map(function(l){return String(l)});s.unshift(\"Warning: \"+o),Function.prototype.apply.call(console[t],console,s)}}var Ie=!1,De=!1,Ae=!1,Pe=!1,Fe=!1,Z;Z=Symbol.for(\"react.module.reference\");function je(t){return!!(typeof t==\"string\"||typeof t==\"function\"||t===g||t===G||Fe||t===N||t===P||t===F||Pe||t===Ee||Ie||De||Ae||typeof t==\"object\"&&t!==null&&(t.$$typeof===j||t.$$typeof===E||t.$$typeof===K||t.$$typeof===X||t.$$typeof===k||t.$$typeof===Z||t.getModuleId!==void 0))}function Me(t,o,a){var i=t.displayName;if(i)return i;var d=o.displayName||o.name||\"\";return d!==\"\"?a+\"(\"+d+\")\":a}function Q(t){return t.displayName||\"Context\"}function p(t){if(t==null)return null;if(typeof t.tag==\"number\"&&f(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof t==\"function\")return t.displayName||t.name||null;if(typeof t==\"string\")return t;switch(t){case g:return\"Fragment\";case _:return\"Portal\";case G:return\"Profiler\";case N:return\"StrictMode\";case P:return\"Suspense\";case F:return\"SuspenseList\"}if(typeof t==\"object\")switch(t.$$typeof){case X:var o=t;return Q(o)+\".Consumer\";case K:var a=t;return Q(a._context)+\".Provider\";case k:return Me(t,t.render,\"ForwardRef\");case E:var i=t.displayName||null;return i!==null?i:p(t.type)||\"Memo\";case j:{var d=t,s=d._payload,l=d._init;try{return p(l(s))}catch{return null}}}return null}var y=Object.assign,w=0,ee,ne,te,oe,ae,ie,re;function le(){}le.__reactDisabledLog=!0;function qe(){{if(w===0){ee=console.log,ne=console.info,te=console.warn,oe=console.error,ae=console.group,ie=console.groupCollapsed,re=console.groupEnd;var t={configurable:!0,enumerable:!0,value:le,writable:!0};Object.defineProperties(console,{info:t,log:t,warn:t,error:t,group:t,groupCollapsed:t,groupEnd:t})}w++}}function $e(){{if(w--,w===0){var t={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:y({},t,{value:ee}),info:y({},t,{value:ne}),warn:y({},t,{value:te}),error:y({},t,{value:oe}),group:y({},t,{value:ae}),groupCollapsed:y({},t,{value:ie}),groupEnd:y({},t,{value:re})})}w<0&&f(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var M=T.ReactCurrentDispatcher,q;function R(t,o,a){{if(q===void 0)try{throw Error()}catch(d){var i=d.stack.trim().match(/\\n( *(at )?)/);q=i&&i[1]||\"\"}return`\n`+q+t}}var $=!1,S;{var Ye=typeof WeakMap==\"function\"?WeakMap:Map;S=new Ye}function de(t,o){if(!t||$)return\"\";{var a=S.get(t);if(a!==void 0)return a}var i;$=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var s;s=M.current,M.current=null,qe();try{if(o){var l=function(){throw Error()};if(Object.defineProperty(l.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(l,[])}catch(x){i=x}Reflect.construct(t,[],l)}else{try{l.call()}catch(x){i=x}t.call(l.prototype)}}else{try{throw Error()}catch(x){i=x}t()}}catch(x){if(x&&i&&typeof x.stack==\"string\"){for(var r=x.stack.split(`\n`),b=i.stack.split(`\n`),m=r.length-1,c=b.length-1;m>=1&&c>=0&&r[m]!==b[c];)c--;for(;m>=1&&c>=0;m--,c--)if(r[m]!==b[c]){if(m!==1||c!==1)do if(m--,c--,c<0||r[m]!==b[c]){var h=`\n`+r[m].replace(\" at new \",\" at \");return t.displayName&&h.includes(\"<anonymous>\")&&(h=h.replace(\"<anonymous>\",t.displayName)),typeof t==\"function\"&&S.set(t,h),h}while(m>=1&&c>=0);break}}}finally{$=!1,M.current=s,$e(),Error.prepareStackTrace=d}var C=t?t.displayName||t.name:\"\",ge=C?R(C):\"\";return typeof t==\"function\"&&S.set(t,ge),ge}function ze(t,o,a){return de(t,!1)}function Ue(t){var o=t.prototype;return!!(o&&o.isReactComponent)}function O(t,o,a){if(t==null)return\"\";if(typeof t==\"function\")return de(t,Ue(t));if(typeof t==\"string\")return R(t);switch(t){case P:return R(\"Suspense\");case F:return R(\"SuspenseList\")}if(typeof t==\"object\")switch(t.$$typeof){case k:return ze(t.render);case E:return O(t.type,o,a);case j:{var i=t,d=i._payload,s=i._init;try{return O(s(d),o,a)}catch{}}}return\"\"}var I=Object.prototype.hasOwnProperty,se={},ue=T.ReactDebugCurrentFrame;function D(t){if(t){var o=t._owner,a=O(t.type,t._source,o?o.type:null);ue.setExtraStackFrame(a)}else ue.setExtraStackFrame(null)}function We(t,o,a,i,d){{var s=Function.call.bind(I);for(var l in t)if(s(t,l)){var r=void 0;try{if(typeof t[l]!=\"function\"){var b=Error((i||\"React class\")+\": \"+a+\" type `\"+l+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof t[l]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw b.name=\"Invariant Violation\",b}r=t[l](o,l,i,a,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(m){r=m}r&&!(r instanceof Error)&&(D(d),f(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",i||\"React class\",a,l,typeof r),D(null)),r instanceof Error&&!(r.message in se)&&(se[r.message]=!0,D(d),f(\"Failed %s type: %s\",a,r.message),D(null))}}}var Be=Array.isArray;function Y(t){return Be(t)}function Le(t){{var o=typeof Symbol==\"function\"&&Symbol.toStringTag,a=o&&t[Symbol.toStringTag]||t.constructor.name||\"Object\";return a}}function He(t){try{return me(t),!1}catch{return!0}}function me(t){return\"\"+t}function ce(t){if(He(t))return f(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",Le(t)),me(t)}var V=T.ReactCurrentOwner,Ge={key:!0,ref:!0,__self:!0,__source:!0},fe,be,z;z={};function Ke(t){if(I.call(t,\"ref\")){var o=Object.getOwnPropertyDescriptor(t,\"ref\").get;if(o&&o.isReactWarning)return!1}return t.ref!==void 0}function Xe(t){if(I.call(t,\"key\")){var o=Object.getOwnPropertyDescriptor(t,\"key\").get;if(o&&o.isReactWarning)return!1}return t.key!==void 0}function Je(t,o){if(typeof t.ref==\"string\"&&V.current&&o&&V.current.stateNode!==o){var a=p(V.current.type);z[a]||(f('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',p(V.current.type),t.ref),z[a]=!0)}}function Ze(t,o){{var a=function(){fe||(fe=!0,f(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",o))};a.isReactWarning=!0,Object.defineProperty(t,\"key\",{get:a,configurable:!0})}}function Qe(t,o){{var a=function(){be||(be=!0,f(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",o))};a.isReactWarning=!0,Object.defineProperty(t,\"ref\",{get:a,configurable:!0})}}var en=function(t,o,a,i,d,s,l){var r={$$typeof:e,type:t,key:o,ref:a,props:l,_owner:s};return r._store={},Object.defineProperty(r._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(r,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:i}),Object.defineProperty(r,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:d}),Object.freeze&&(Object.freeze(r.props),Object.freeze(r)),r};function nn(t,o,a,i,d){{var s,l={},r=null,b=null;a!==void 0&&(ce(a),r=\"\"+a),Xe(o)&&(ce(o.key),r=\"\"+o.key),Ke(o)&&(b=o.ref,Je(o,d));for(s in o)I.call(o,s)&&!Ge.hasOwnProperty(s)&&(l[s]=o[s]);if(t&&t.defaultProps){var m=t.defaultProps;for(s in m)l[s]===void 0&&(l[s]=m[s])}if(r||b){var c=typeof t==\"function\"?t.displayName||t.name||\"Unknown\":t;r&&Ze(l,c),b&&Qe(l,c)}return en(t,r,b,d,i,V.current,l)}}var U=T.ReactCurrentOwner,he=T.ReactDebugCurrentFrame;function v(t){if(t){var o=t._owner,a=O(t.type,t._source,o?o.type:null);he.setExtraStackFrame(a)}else he.setExtraStackFrame(null)}var W;W=!1;function B(t){return typeof t==\"object\"&&t!==null&&t.$$typeof===e}function _e(){{if(U.current){var t=p(U.current.type);if(t)return`\n\nCheck the render method of \\``+t+\"`.\"}return\"\"}}function tn(t){{if(t!==void 0){var o=t.fileName.replace(/^.*[\\\\\\/]/,\"\"),a=t.lineNumber;return`\n\nCheck your code at `+o+\":\"+a+\".\"}return\"\"}}var pe={};function on(t){{var o=_e();if(!o){var a=typeof t==\"string\"?t:t.displayName||t.name;a&&(o=`\n\nCheck the top-level render call using <`+a+\">.\")}return o}}function xe(t,o){{if(!t._store||t._store.validated||t.key!=null)return;t._store.validated=!0;var a=on(o);if(pe[a])return;pe[a]=!0;var i=\"\";t&&t._owner&&t._owner!==U.current&&(i=\" It was passed a child from \"+p(t._owner.type)+\".\"),v(t),f('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',a,i),v(null)}}function Ne(t,o){{if(typeof t!=\"object\")return;if(Y(t))for(var a=0;a<t.length;a++){var i=t[a];B(i)&&xe(i,o)}else if(B(t))t._store&&(t._store.validated=!0);else if(t){var d=Se(t);if(typeof d==\"function\"&&d!==t.entries)for(var s=d.call(t),l;!(l=s.next()).done;)B(l.value)&&xe(l.value,o)}}}function an(t){{var o=t.type;if(o==null||typeof o==\"string\")return;var a;if(typeof o==\"function\")a=o.propTypes;else if(typeof o==\"object\"&&(o.$$typeof===k||o.$$typeof===E))a=o.propTypes;else return;if(a){var i=p(o);We(a,t.props,\"prop\",i,t)}else if(o.PropTypes!==void 0&&!W){W=!0;var d=p(o);f(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",d||\"Unknown\")}typeof o.getDefaultProps==\"function\"&&!o.getDefaultProps.isReactClassApproved&&f(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function rn(t){{for(var o=Object.keys(t.props),a=0;a<o.length;a++){var i=o[a];if(i!==\"children\"&&i!==\"key\"){v(t),f(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",i),v(null);break}}t.ref!==null&&(v(t),f(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),v(null))}}function ln(t,o,a,i,d,s){{var l=je(t);if(!l){var r=\"\";(t===void 0||typeof t==\"object\"&&t!==null&&Object.keys(t).length===0)&&(r+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var b=tn(d);b?r+=b:r+=_e();var m;t===null?m=\"null\":Y(t)?m=\"array\":t!==void 0&&t.$$typeof===e?(m=\"<\"+(p(t.type)||\"Unknown\")+\" />\",r=\" Did you accidentally export a JSX literal instead of a component?\"):m=typeof t,f(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",m,r)}var c=nn(t,o,a,d,s);if(c==null)return c;if(l){var h=o.children;if(h!==void 0)if(i)if(Y(h)){for(var C=0;C<h.length;C++)Ne(h[C],t);Object.freeze&&Object.freeze(h)}else f(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else Ne(h,t)}return t===g?rn(c):an(c),c}}var dn=ln;H.Fragment=g,H.jsxDEV=dn})()});var Ve=L((Cn,we)=>{\"use strict\";we.exports=Ce()});var gn={};bn(gn,{default:()=>Nn,frontmatter:()=>pn});var n=hn(Ve()),pn={title:\"Fintech Engineering Challenges\",excerpt:\"Having worked in financial services for most of my career I want to share some the software engineering challenges that are associated with tracking and moving money digitally. Most of these lessons have been learned the hard way. Hopefully they will be useful to anyone moving into the fintech space.\",coverImage:\"/assets/blog/img/fintech.jpg\",date:\"2023-08-21\",published:!0,author:{name:\"Dan Stroot\",picture:\"/assets/blog/authors/dan.jpeg\"},ogImage:{url:\"/assets/blog/img/fintech.jpg\"},seoURL:null};function ke(u){let e=Object.assign({p:\"p\",h2:\"h2\",table:\"table\",thead:\"thead\",tr:\"tr\",th:\"th\",tbody:\"tbody\",td:\"td\",a:\"a\",ul:\"ul\",li:\"li\",em:\"em\",code:\"code\",blockquote:\"blockquote\",strong:\"strong\",ol:\"ol\",h3:\"h3\"},u.components);return(0,n.jsxDEV)(n.Fragment,{children:[(0,n.jsxDEV)(e.p,{children:\"Having worked in financial services/fintech for most of my career I want to share some the software engineering challenges that are associated with tracking and moving money digitally. Most of these lessons have been learned the hard way. Hopefully they will be useful to anyone moving into the fintech space.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:15,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:'Note: I am intentionally ignoring the broad topic of \"security\" because that alone is a much longer article - however some of the items below are strong controls and help with security. Good design patterns help with both challenges.'},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:17,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"table-of-contents\",children:\"Table of Contents\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:19,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.table,{children:[(0,n.jsxDEV)(e.thead,{children:(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.th,{children:\"No.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:21,columnNumber:1},this),(0,n.jsxDEV)(e.th,{children:\"Section\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:21,columnNumber:7},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:21,columnNumber:1},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:21,columnNumber:1},this),(0,n.jsxDEV)(e.tbody,{children:[(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.td,{children:\"1\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:23,columnNumber:1},this),(0,n.jsxDEV)(e.td,{children:(0,n.jsxDEV)(e.a,{href:\"#1\",children:\"Significant Digits/Rounding\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:23,columnNumber:9},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:23,columnNumber:7},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:23,columnNumber:1},this),(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.td,{children:\"2\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:24,columnNumber:1},this),(0,n.jsxDEV)(e.td,{children:(0,n.jsxDEV)(e.a,{href:\"#2\",children:\"Ledgers, Accounts and Transactions\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:24,columnNumber:9},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:24,columnNumber:7},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:24,columnNumber:1},this),(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.td,{children:\"3\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:25,columnNumber:1},this),(0,n.jsxDEV)(e.td,{children:(0,n.jsxDEV)(e.a,{href:\"#reporting-periods\",children:\"Reporting Periods\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:25,columnNumber:9},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:25,columnNumber:7},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:25,columnNumber:1},this),(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.td,{children:\"4\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:26,columnNumber:1},this),(0,n.jsxDEV)(e.td,{children:(0,n.jsxDEV)(e.a,{href:\"#4\",children:\"Reconciliation\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:26,columnNumber:9},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:26,columnNumber:7},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:26,columnNumber:1},this),(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.td,{children:\"5\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:27,columnNumber:1},this),(0,n.jsxDEV)(e.td,{children:(0,n.jsxDEV)(e.a,{href:\"#5\",children:\"Transaction States\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:27,columnNumber:9},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:27,columnNumber:7},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:27,columnNumber:1},this),(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.td,{children:\"6\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:28,columnNumber:1},this),(0,n.jsxDEV)(e.td,{children:(0,n.jsxDEV)(e.a,{href:\"#6\",children:\"Immutability\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:28,columnNumber:9},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:28,columnNumber:7},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:28,columnNumber:1},this),(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.td,{children:\"7\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:29,columnNumber:1},this),(0,n.jsxDEV)(e.td,{children:(0,n.jsxDEV)(e.a,{href:\"#7\",children:\"Currency Codes\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:29,columnNumber:9},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:29,columnNumber:7},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:29,columnNumber:1},this),(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.td,{children:\"8\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:30,columnNumber:1},this),(0,n.jsxDEV)(e.td,{children:(0,n.jsxDEV)(e.a,{href:\"#8\",children:\"Time/Timestamps\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:30,columnNumber:9},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:30,columnNumber:7},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:30,columnNumber:1},this),(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.td,{children:\"9\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:31,columnNumber:1},this),(0,n.jsxDEV)(e.td,{children:(0,n.jsxDEV)(e.a,{href:\"#9\",children:\"Retry Logic\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:31,columnNumber:9},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:31,columnNumber:7},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:31,columnNumber:1},this),(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.td,{children:\"10\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:32,columnNumber:1},this),(0,n.jsxDEV)(e.td,{children:(0,n.jsxDEV)(e.a,{href:\"#10\",children:\"Architecture\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:32,columnNumber:9},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:32,columnNumber:7},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:32,columnNumber:1},this),(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.td,{children:\"11\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:33,columnNumber:1},this),(0,n.jsxDEV)(e.td,{children:(0,n.jsxDEV)(e.a,{href:\"#11\",children:\"Identity Management\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:33,columnNumber:9},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:33,columnNumber:7},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:33,columnNumber:1},this),(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.td,{children:\"11\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:34,columnNumber:1},this),(0,n.jsxDEV)(e.td,{children:(0,n.jsxDEV)(e.a,{href:\"#12\",children:\"Testing and Release Management\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:34,columnNumber:9},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:34,columnNumber:7},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:34,columnNumber:1},this),(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.td,{children:\"12\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:35,columnNumber:1},this),(0,n.jsxDEV)(e.td,{children:(0,n.jsxDEV)(e.a,{href:\"#13\",children:\"Application Monitoring\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:35,columnNumber:9},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:35,columnNumber:7},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:35,columnNumber:1},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:23,columnNumber:1},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:21,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"significant-digitsrounding\",children:[(0,n.jsxDEV)(\"a\",{name:\"1\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:37,columnNumber:4},this),\"Significant Digits/Rounding\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:37,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"This is so critical that I once wrote a whitepaper on this topic alone. When floating point numbers (numbers that have a decimal point) are represented in binary, they lose precision. For example, ten cents (0.10) in binary is a repeating binary number that goes on forever like this: 0.000110011001100110011001100110011001100110011001100110011...\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:39,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"If you use floating point numbers to represent currency, computers will have to round them, and the rounding errors will add up and become noticeable, even substantial. Start with $10.00 USD and divide it equally into three payments, rounded to two decimals - you will have three $3.33 transactions. Add them back up and you have $9.99, not $10.00. You made a penny disappear into thin air (0.1% of the total value!).\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:41,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:[\"Currency math is more closely related to integer math than it is to floating point math. Rounding errors on addition and subtraction are not allowed and division/multiplication should never create more accuracy than the original values. If money needs to be divided, and division isn't even, rounding should be apportioned according to well-understood business rules. In other words, in the example above you should end up with three transactions, two for $3.33 and one for $3.34. This is best accomplished with a well-tested \",(0,n.jsxDEV)(e.a,{href:\"https://metacpan.org/pod/Math::Currency\",children:\"currency math library\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:43,columnNumber:532},this),\" in your chosen language. Do not attempt to write this yourself.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:43,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"Notes:\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:45,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.ul,{children:[`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[\"How you \",(0,n.jsxDEV)(e.em,{children:\"store\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:47,columnNumber:11},this),\" monetary values is a key decision and has to align with your currency math library. For accounting applications it's very common to store values as integers (e.g., use \",(0,n.jsxDEV)(e.code,{children:\"BigInt\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:47,columnNumber:187},this),\") in the database. For example, take the amount of the transaction (let's suppose $100.23) and multiply by 100, 1000, 10000, etc. to get the accuracy you need. If you only need to store USD just multiply by 100 (but note many currencies have more than two digits after the decimal). In the example, you would store the integer 10023. You'll save space in the database and comparing two integers doesn't have the gotcha's of comparing two floats. Many recommend \",(0,n.jsxDEV)(e.code,{children:\"Decimal(19,4)\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:47,columnNumber:656},this),\". Some relational databases, such as Postgres, support a \",(0,n.jsxDEV)(e.code,{children:\"Money\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:47,columnNumber:728},this),\" type but then you are wedded to that specific database.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:47,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:47,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[\"When using JSON to pass monetary quantities (e.g., from the frontend to the backend) use integers like \",(0,n.jsxDEV)(e.a,{href:\"https://stripe.com/docs/api/prices/create#create_price-unit_amount\",children:\"Stripe\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:49,columnNumber:106},this),\" and \",(0,n.jsxDEV)(e.a,{href:\"https://developer.squareup.com/reference/square/objects/Money\",children:\"Square\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:49,columnNumber:187},this),\". Otherwise, consider putting the values in strings - you never know what the serializers and deserializers across languages will do to your numbers.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:49,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:49,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[\"When processing currency values you need to strip currency formatting and standardize the decimal. Great Britain and the United States are two of the few places in the world that use a period to indicate the decimal place. Many other countries use a comma instead - and three digits after the decimal instead of two. The decimal separator is also called the \",(0,n.jsxDEV)(e.em,{children:\"radix character\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:51,columnNumber:361},this),\". Likewise, while the U.K. and U.S. use a comma to separate groups of thousands, many other countries use a period, and some countries separate thousands with a thin space. You need libraries that can encode and decode human-readable values for each currency. You also need to be able to convert currency codes to currency symbols.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:51,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:51,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:`This isn't specific to currency but sometimes what you think is a \"number\" isn't. You often need to use strings. If you need to store a bank account number like \\u201C01234567789\\u201D it will have the leading zero stripped if you use a numeric type.`},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:53,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:53,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:47,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"ledgers-accounts-and-transactions\",children:[(0,n.jsxDEV)(\"a\",{name:\"2\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:55,columnNumber:4},this),\"Ledgers, Accounts and Transactions\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:55,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:'The core concept of most financial systems is a current value which is changed via \"transactions\". We can model this as an \"account\" table and a \"transaction\" table. When a new account is created it has a value of zero. The account value is then updated via transactions (events) and reflects the current state. The transactions are stored for the lifetime as the account, along with precise timestamps so we know the sequence they were applied.'},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:57,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:[\"Martin Fowler calls this pattern \",(0,n.jsxDEV)(e.a,{href:\"https://martinfowler.com/eaaDev/EventSourcing.html\",children:\"Event Sourcing\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:59,columnNumber:34},this),\":\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:59,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.blockquote,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:\"The fundamental idea of Event Sourcing is that of ensuring every change to the state of an application is captured in an event object, and that these event objects are themselves stored in the sequence they were applied for the same lifetime as the application state itself.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:61,columnNumber:3},this),`\n`,(0,n.jsxDEV)(\"cite\",{children:\"\\u2014 Martin Fowler, Event Sourcing\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:63,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:61,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"We should always be able to start at zero, re-apply the transactions in order, and arrive at the same current account state. However, what happens we have millions of accounts and billions of transactions? Can we easily and quickly validate our account values? How can we spot errors?\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:65,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:[\"This is where \",(0,n.jsxDEV)(e.strong,{children:\"double entry accounting\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:67,columnNumber:15},this),\" comes into play. Double-entry accounting originated in the 13th century in Italy to ensure the accuracy of banking and financial records. In a double-entry system, the amounts recorded as debits \",(0,n.jsxDEV)(e.em,{children:\"must always be equal\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:67,columnNumber:238},this),\" to the amounts recorded as credits.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:67,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:[\"\\u201CUse a double-entry ledger\\u201D is probably the most valuable advice I could have sent myself prior to getting into fintech because it allows you to \",(0,n.jsxDEV)(e.em,{children:\"reconcile all your data all the time\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:69,columnNumber:146},this),\".\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:69,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:['In fact, the term \"balance\" comes from double entry accounting - credits must always balance with debits. Thus, every transaction is ',(0,n.jsxDEV)(e.em,{children:\"balanced\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:71,columnNumber:134},this),\" \\u2013 it sums to zero. For example, if we sell a $100 widget but haven't been paid yet, we are owed $100, and we have $100 in revenue:\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:71,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.table,{children:[(0,n.jsxDEV)(e.thead,{children:(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.th,{children:\"Ledger Account\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:73,columnNumber:1},this),(0,n.jsxDEV)(e.th,{children:\"Debit\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:73,columnNumber:52},this),(0,n.jsxDEV)(e.th,{children:\"Credit\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:73,columnNumber:66},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:73,columnNumber:1},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:73,columnNumber:1},this),(0,n.jsxDEV)(e.tbody,{children:[(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.td,{children:\"balance_sheet.current_assets.accounts_receivable\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:75,columnNumber:1},this),(0,n.jsxDEV)(e.td,{children:\"$100.00\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:75,columnNumber:52},this),(0,n.jsxDEV)(e.td,{children:\"$0\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:75,columnNumber:66},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:75,columnNumber:1},this),(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.td,{children:\"profit_loss.revenue.general\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:76,columnNumber:1},this),(0,n.jsxDEV)(e.td,{children:\"$0\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:76,columnNumber:52},this),(0,n.jsxDEV)(e.td,{children:\"$100.00\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:76,columnNumber:66},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:76,columnNumber:1},this),(0,n.jsxDEV)(e.tr,{children:[(0,n.jsxDEV)(e.td,{children:(0,n.jsxDEV)(e.strong,{children:\"Balance\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:77,columnNumber:3},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:77,columnNumber:1},this),(0,n.jsxDEV)(e.td,{children:(0,n.jsxDEV)(e.strong,{children:\"$100.00\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:77,columnNumber:54},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:77,columnNumber:52},this),(0,n.jsxDEV)(e.td,{children:(0,n.jsxDEV)(e.strong,{children:\"$100.00\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:77,columnNumber:68},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:77,columnNumber:66},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:77,columnNumber:1},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:75,columnNumber:1},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:73,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"To understand this further let's introduce some terms:\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:79,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.ul,{children:[`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[(0,n.jsxDEV)(e.strong,{children:\"Ledger\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:81,columnNumber:3},this),\": A ledger contains accounts and journal (bookkeeping) entries. Every business has one ledger for itself internally. You can also have external ledgers. A bank account is an example of an external ledger.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:81,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:81,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[(0,n.jsxDEV)(e.strong,{children:\"Account\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:83,columnNumber:3},this),\": Ledger accounts categorize the money flowing through the ledger. It is modelled like a tree, with the topmost levels pointing to the balance sheet or profit-loss statement. The second level points to items on the reports. The lower levels are customizable. Examples of common ledger accounts are revenue, accounts receivable, and accounts payable.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:83,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:83,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[(0,n.jsxDEV)(e.strong,{children:\"Journal entry\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:85,columnNumber:3},this),': this is a single record in the ledger, comparable to a row in a table. It reflects the actual money movement between ledger accounts. This is what we would consider a transaction, or Martin Fowler would call an \"event\".']},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:85,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:85,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[(0,n.jsxDEV)(e.strong,{children:\"Credits and Debits\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:87,columnNumber:3},this),\": A debit is an entry that is created to indicate either an increase in assets or a decrease in liabilities on a business's balance sheet. Credits, on the other hand, work in the opposite way - they are mirrors of one another.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:87,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:87,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:81,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:[\"If we are correctly handling transactions via a ledger, we can make sure we are \",(0,n.jsxDEV)(e.strong,{children:\"always in balance\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:89,columnNumber:81},this),\". This is a critical control.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:89,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"reporting-periods\",children:\"Reporting Periods\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:91,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:'When reporting financial results, we have the concept of a period \"close\". For example, in an accounting system there are monthly, quarterly, and annual closes. The goal is that financial reporting should be immutable and idempotent: Close your periods and generate reports for them, and if/when you regenerate the report it must be identical.'},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:93,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"Once a period is closed new transactions cannot affect it - it should be effectively immutable after being closed, except we must handle the edge case of re-opening periods.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:95,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:'If an \"as of\" (late) transaction arrives for a date/time in a closed period, the period may be re-opened and closed again after the transaction is posted. This can be quite complex as it also requires subsequent transactions to be reversed and re-applied, plus it requires restating the period results, and requires new financial reports to be issued. This is typically done for material transactions only.'},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:97,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:'For non-material transactions, the \"as-of\" transaction is posted to the first moment of the current open period instead. In this example the transaction date/time and posting date/time will be different. The transaction date could be September 23rd but posted on October 1st (the first day of the open period.) This also requires any subsequent transactions to be reversed and re-applied.'},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:99,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"-reconciliation\",children:[(0,n.jsxDEV)(\"a\",{name:\"4\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:101,columnNumber:4},this),\" Reconciliation\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:101,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.blockquote,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:\"Reconciliation: A game designed to frustrate the player.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:103,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:103,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"Reconciliation is a business process which arises almost entirely because of a lack of structured data and controls in the pipelines that convey money between businesses or people. Because of this, to a greater or lesser degree worldwide, many people must spend a great deal of time every month reconciling incoming payments to invoices or other money movement.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:105,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"Because of technological and organizational barriers, the people who do this work (in Accounts Payable, or Operations, or any other seat at the company) often do not have direct visibility into the customer relationships or the full transaction details which gave rise to the invoice, or payment. Money movement is today, after all, just a message between parties related to some type of contract or event. Reconciliation is a business process which arises almost entirely because of a lack of structured data in the pipelines that convey money between businesses.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:107,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"For the last several hundred years, these have followed a very well-understood dance. A deal is struck. The exact amount of compensation is decided upon and memorialized by the sender in an invoice. The purchaser receives the invoice, reads it, then wraps money around a metaphorical brick and throws it through a metaphorical window. Someone on the other side of the window then applies forensic science to the question of what caused this particular brick to arrive.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:109,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:[\"Humans should not be involved in performing reconciliation. They should only be involved in investigating reconciliation issues/errors. My advice is design and \",(0,n.jsxDEV)(e.strong,{children:\"build automated reconciliation into your system from the start\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:111,columnNumber:161},this),\".\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:111,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"The implications are straightforward: this lowers the total cost of payments by eliminating human effort, which is expensive, and human errors, which are expensive and numerous. An underappreciated consequence is that freeing people from drudgery gives them the ability to do more important, meaningful work. However, reconciliation is complicated by the many states that financial transactions may be in.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:113,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"transaction-states\",children:[(0,n.jsxDEV)(\"a\",{name:\"5\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:115,columnNumber:4},this),\"Transaction States\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:115,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:[\"Financial transactions have many different states. For example, credit card payment states can be authorized, cleared, voided, returned, declined, etc. It can be tempting to just go ahead an update the state on the transaction record. \",(0,n.jsxDEV)(e.strong,{children:\"Don't do that!\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:117,columnNumber:236},this),\" Instead, each state change should have its own immutable record, tracking transaction state changes over time.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:117,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:'You will need transaction state auditability. Auditors looking at a financial system need to trust that every entry in the ledger was made at a specific time and has not been manipulated in any way. \\u201CUpdating transactions\\u201D would be better phrased to an architect as \\u201Cuse an append-only log / event architecture\\u201D. Also, it is very beneficial to design and build your transaction state libraries around a \"state machine\" that enforces the business rules of state changes.'},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:119,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"Business rules are a pit of alligators, but some types of logical validation should be built into your transaction posting logic. If you sell widgets that range from $10.00 to $1,000 USD, should you expect to see a sales transaction for $10 million dollars? Or, one for a penny? At the very least these transactions should be flagged for review.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:121,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:`You should build data quality rules on top of your data storage. Data quality rules typically fall into one of six dimensions: accuracy, completeness, consistency, timeliness, validity, and uniqueness. Validity rules such as \"can't be null\", \"can't be less than zero\", and \"must be in this range\" can highlight suspect data quickly.`},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:123,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"immutability\",children:[(0,n.jsxDEV)(\"a\",{name:\"6\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:125,columnNumber:4},this),\"Immutability\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:125,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:'I have mentioned immutable data like transactions and transaction state changes several times now. There are other key benefits to having data be immutable - as an example, ransomware cannot corrupt or encrypt immutable data. Also, immutable data can be optimized for \"write once, read many\" access so it can be more performant.'},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:127,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"This also helps with auditability, information security, and controls. Auditors, CISO's and regulators love immutable data.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:129,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"currency-codes\",children:[(0,n.jsxDEV)(\"a\",{name:\"7\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:131,columnNumber:4},this),\"Currency Codes\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:131,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:[(0,n.jsxDEV)(e.strong,{children:\"Never\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:133,columnNumber:1},this),\" record an amount without its associated currency code. Use \",(0,n.jsxDEV)(e.a,{href:\"https://www.iso.org/iso-4217-currency-codes.html\",children:\"ISO standard codes\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:133,columnNumber:70},this),\". For example, the Swiss franc is represented by CHF \\u2013 the CH being the code for Switzerland in the ISO 3166 code and F for franc.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:133,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:`Don't be tempted to use currency symbols - they not unique. The Australian dollar, Mexican Peso, Singapore Dollar, and US Dollar all use \"$\". Trust me - use ISO standard currency codes.`},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:135,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:[\"All amounts/values need a corresponding currency code, \",(0,n.jsxDEV)(e.em,{children:\"everywhere\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:137,columnNumber:56},this),\". In addition, transactions will also need accurate timestamps for many reasons (e.g., to find the most accurate exchange rate).\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:137,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"timetimestamps\",children:[(0,n.jsxDEV)(\"a\",{name:\"8\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:139,columnNumber:4},this),\"Time/Timestamps\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:139,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:[(0,n.jsxDEV)(e.strong,{children:\"Never\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:141,columnNumber:1},this),\" record a transaction without an accurate timestamp. Timestamps and time synchronization are incredibly important in fintech applications for several reasons:\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:141,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.ol,{children:[`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[(0,n.jsxDEV)(e.em,{children:\"Transaction Ordering:\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:143,columnNumber:4},this),\" Financial transactions need to be processed in the order they were initiated. This is especially crucial in high-frequency trading where trades are often made in milliseconds or microseconds. A small difference in timing could potentially lead to substantial financial gains or losses. Therefore, accurate time synchronization ensures order in the execution of these transactions.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:143,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:143,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[(0,n.jsxDEV)(e.em,{children:\"Security:\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:145,columnNumber:4},this),\" Accurate timekeeping helps in maintaining security. For instance, time-based one-time passwords (TOTPs) are widely used in two-factor authentication systems. These passwords are valid only for a short period of time and rely on synchronized clocks on the server and client side.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:145,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:145,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[(0,n.jsxDEV)(e.em,{children:\"Audit Trails and Dispute Resolution:\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:147,columnNumber:4},this),\" Timestamping transactions can help create a precise audit trail, which is critical for detecting and investigating fraudulent activities. In case of any dispute, a detailed and accurate transaction history backed by synchronized time can help resolve the issue.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:147,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:147,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[(0,n.jsxDEV)(e.em,{children:\"Distributed Processing:\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:149,columnNumber:4},this),\" fintech systems must scale, and in order to scale and maintain reliability they are architected as distributed systems. In distributed systems, time synchronization is important to ensure data consistency. Many financial systems are distributed over different geographical locations, and transactions need to be coordinated between these systems in an orderly fashion. This requires all servers to have their clocks synchronized.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:149,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:149,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:143,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:['Think of \"currency\" as three seperate components: (',(0,n.jsxDEV)(e.em,{children:\"currency code, decimal amount, and timestamp\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:151,columnNumber:52},this),\").\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:151,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"Other considerations:\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:153,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.ol,{children:[`\n`,(0,n.jsxDEV)(e.li,{children:\"Use TIMESTAMPTZ. Always. The timestamptz datatype is a time zone-aware date and time data type. Furthermore, even for \\u201Cdate fields\\u201D consider using a timestamptz. Every date implicitly exists in a timezone, and if you ignore that you'll get bitten later.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:155,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[\"When you're using JSON to pass around datetime data, Use ISO8601 date and time with offset info, \",(0,n.jsxDEV)(e.strong,{children:\"always\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:156,columnNumber:106},this),'. E.g., \"transaction_timestamp\": \"2023\\u201006\\u201028T15:55:22.511Z\".']},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:156,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[\"Use UTC everywhere, even when you find you can't use it \",(0,n.jsxDEV)(e.em,{children:\"everywhere\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:157,columnNumber:60},this),\".\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:157,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[\"Another important one to think about is bitemporality. \\u201CCreated at\\u201D vs \\u201Ceffective at\\u201D. Not obvious at first, and you'll need to build it in. Fowler has a good overview \",(0,n.jsxDEV)(e.a,{href:\"https://martinfowler.com/eaaDev/timeNarrative.html\",children:\"here\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:158,columnNumber:177},this),\".\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:158,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:155,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"retry-logic\",children:[(0,n.jsxDEV)(\"a\",{name:\"9\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:160,columnNumber:4},this),\"Retry Logic\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:160,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:'There are many places in fintech where we want \"exactly once\" transaction processing. Consider API calls: what if we were designing an API endpoint to charge a customer money; accidentally calling it twice would lead to the customer being double charged.'},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:162,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:[\"This is where idempotency keys come into play. When performing an API request, or a transaction, the client generates a unique ID to identify just that operation and sends it up to the server along with the normal payload. The server receives the ID and correlates it with the state of the request on its end. If the client notices a failure, it retries the request \",(0,n.jsxDEV)(e.em,{children:\"with the same ID\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:164,columnNumber:367},this),\", and from there it\\u2019s up to the server to figure out what to do with it.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:164,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.ul,{children:[`\n`,(0,n.jsxDEV)(e.li,{children:\"On retrying a connection failure, on the second request the server will see the ID for the first time and process it normally.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:166,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:\"On a failure midway through an operation, the exact behavior is heavily dependent on implementation, but if the previous operation was successfully rolled back by way of an ACID database, it\\u2019ll be safe to retry it.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:167,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:\"On a response failure (i.e., the operation executed successfully, but the client couldn\\u2019t get the result), the server simply replies with a cached result of the successful operation.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:168,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:166,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:[\"\\u201CBe careful with retry\\u201D should be more strictly \\u201Cuse idempotent operations\\u201D and link to the canonical Stripe article on \",(0,n.jsxDEV)(e.a,{href:\"https://stripe.com/blog/idempotency\",children:\"idempotency\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:170,columnNumber:121},this),\".\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:170,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"architecture\",children:[(0,n.jsxDEV)(\"a\",{name:\"10\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:172,columnNumber:4},this),\"Architecture\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:172,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"A well-designed architecture not only ensures optimal performance and scalability but also addresses critical concerns of security, compliance, and user experience. This article provides some clear, high-level advice.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:174,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.ol,{children:[`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[(0,n.jsxDEV)(e.strong,{children:\"Study any and all code\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:176,columnNumber:4},this),\" you can get your hands on first. For example, a great open source banking core having many of the strengths listed is \",(0,n.jsxDEV)(e.a,{href:\"https://github.com/apache/fineract/\",children:\"Apache Fineract\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:176,columnNumber:149},this),\". Also check out the links in the References section below.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:176,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:176,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[(0,n.jsxDEV)(e.strong,{children:\"Model your processes\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:178,columnNumber:4},this),\". One of the best to keep complexity in check is to model processes as state machines (with the state itself being persisted to DB). State machines can be formally tested. By modelling your systems, you will learn what the important failure modes are and you will get better at designing systems that are resilient and efficient.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:178,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:178,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[(0,n.jsxDEV)(e.strong,{children:\"Use formal methods.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:180,columnNumber:4},this),\" Harnessing the capabilities of formal software architecture design methodologies offers a structured approach to conceptualizing, designing, and implementing complex financial systems, ensuring robustness, reliability, and adherence to industry standards. Complex fintech projects involve multidisciplinary teams. Formal architectures provide a shared language and understanding, enhancing collaboration among developers, architects, domain experts, and business stakeholders. Incorporating formal architecture or design methods into fintech endeavors is an investment in long-term success.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:180,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:180,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[(0,n.jsxDEV)(e.strong,{children:\"Use proven design patterns\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:182,columnNumber:4},this),\". Queues, retries, event sourcing, payment state handling -- we live in a concurrent world with network failures and our system will need to gracefully handle outages. Vendors will have errors and outages too. Use design patterns that help with robustness and reliability.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:182,columnNumber:4},this),`\n`,(0,n.jsxDEV)(e.p,{children:['Card payment systems are basically unreliable peer-to-peer messaging systems. Be prepared for a lot of complexity. Using an event-sourcing architecture is useful here for that \"auditing\" requirement and for debugging transaction state when the network sends you messages in error, out of order, or they forget to retry themselves when they promised to, when merchants send bad data, when POS systems do weird things, etc. Your partners ',(0,n.jsxDEV)(e.strong,{children:\"will\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:184,columnNumber:440},this),\" send you bad data - be prepared to validate all input data thoroughly and have strategies in place for when it's wrong.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:184,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:182,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[(0,n.jsxDEV)(e.strong,{children:\"Use well designed, tested, and trusted componentry\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:186,columnNumber:4},this),\". The libraries and SDKs you will need to use will become a large, critical part of your overall technology stack and some of these decisions will be very difficult to unwind if they don't work out. Knowing how to wrap and use third party libraries for things like DOCv step up, remote deposit capture, and security features is table stakes. If your stack choices make this challenging you're going to have a hard time for a long time.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:186,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:186,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[(0,n.jsxDEV)(e.strong,{children:\"Formalize your testing strategy and code coverage epectations\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:188,columnNumber:4},this),`. It's nearly impossible to be successful with lightweight, informal testing strategies employed by busy software teams. Yes, you will be tempted to \"move fast\" and use prototypes, etc. But if you don't build in robust automated testing from the start along with methods of managing test data you will have a hard time.`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:188,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:188,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:176,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"Other considerations:\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:190,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.ul,{children:[`\n`,(0,n.jsxDEV)(e.li,{children:\"Maker-checker is a powerful concept. Embrace it to the fullest across your system.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:192,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[\"You will be dealing with all sorts of non-standardized financial integrations. A lot. Think \",(0,n.jsxDEV)(e.a,{href:\"https://refactoring.guru/design-patterns/adapter/typescript/example\",children:\"adapter pattern\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:193,columnNumber:95},this),\" as early as possible.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:193,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:\"You will likely be answering to multiple regulatory agencies. Create boundaries between them within your system and reduce the surface of compliance as much as possible.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:194,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:\"Be paranoid about race conditions / serialization anomalies.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:195,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:\"Use immutable storage where possible (this also protects from ransomware).\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:196,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:192,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"identity-management\",children:[(0,n.jsxDEV)(\"a\",{name:\"11\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:198,columnNumber:4},this),\"Identity Management\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:198,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"Financial systems attract fraud. One of the best ways to combat fraud is having robust ways to determine that someone is who they claim to be, and that they are a human. Identity management is the bedrock upon which the entire financial ecosystem is built, offering protection against fraud and ensuring the overall robustness of the ecosystem. Identity theft, account takeovers, and fraudulent transactions are just a few examples of the threats that financial institutions face. Identity management acts as a bulwark against these threats.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:200,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"The financial ecosystem is a complex network of institutions, customers, partners, and regulators. The integrity of this ecosystem relies heavily on the accurate identification and verification of all participants. Identity management plays a crucial role in maintaining the trust and credibility that underpin financial transactions. By establishing a reliable and secure means of confirming identities, financial institutions can confidently interact with each other, customers can trust the services they receive, and regulators can ensure compliance with relevant laws and regulations.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:202,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:[\"This is where a partner like \",(0,n.jsxDEV)(e.a,{href:\"https://www.socure.com/\",children:\"Socure\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:204,columnNumber:30},this),\" can help - this is very hard to get right and takes lots of design and build time to get right. My advice is not to do this yourself.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:204,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"testing-and-release-management\",children:[(0,n.jsxDEV)(\"a\",{name:\"12\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:206,columnNumber:4},this),\"Testing and Release Management\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:206,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:[\"Deciding how to configure environments \\u2014 dev, test, prod, etc. \\u2014 and how to ensure they are running properly can be rough in any organization. In fintech, when \",(0,n.jsxDEV)(e.strong,{children:\"real money\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:208,columnNumber:161},this),\" moves on prod, and core functionality depends on numerous third-party integrations, it is very challenging. This article is not the place to explain how to do it, but there are three common mistakes to avoid.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:208,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.ol,{children:[`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:\"Many companies have a confusing or poorly documented path from test to production for third party integrators. Make this path clear, and while you're at it, do a risk analysis on whether it could ever be possible for a third party to connect to the wrong environment without catching their own mistake.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:210,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:210,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:[\"Plan for every important configuration of your production environment to be testable. Testability might require multiple test merchants and test accounts that move real money. You never know when you need to double check that the plumbing is working. Face it: \",(0,n.jsxDEV)(e.a,{href:\"https://increment.com/testing/i-test-in-production/\",children:\"You Test in Prod\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:212,columnNumber:264},this),\".\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:212,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:212,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:[`\n`,(0,n.jsxDEV)(e.p,{children:\"An often-overlooked requirement is to be able to ensure that the production environment is doing error handling properly. The thing about production systems is that they're not supposed to have errors, so you can't see how they perform under error conditions unless you can force errors to happen.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:214,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:214,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:210,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h2,{id:\"application-monitoring\",children:[(0,n.jsxDEV)(\"a\",{name:\"13\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:216,columnNumber:4},this),\"Application Monitoring\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:216,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:[\"Your application will need a full suite of application metrics that need to be defined \",(0,n.jsxDEV)(e.strong,{children:\"up front\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:218,columnNumber:88},this),\" and engineered into the application. Deploying to a public cloud like AWS means that some infrastructure monitoring can be added quickly and almost as an afterthought, but \",(0,n.jsxDEV)(e.em,{children:\"application\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:218,columnNumber:273},this),\" monitoring cannot.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:218,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"On day one of your launch, the CEO will want to know things like how many transactions are being processed and what their total dollar amount is. Another thing that tends to happen early in the life of a fintech is that there will be a drop-off between signups and usage, and someone on the product team will start asking if users are experiencing errors. Be ready with good application monitoring to be able to answer these kinds of questions.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:220,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.p,{children:\"What metrics signal fraud attempts? From day one you will have to be vigilant about fraud patterns in your application. Make sure you monitoring on user activity for the inevitable questions that will be coming your way.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:222,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.h3,{id:\"references\",children:\"References\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:224,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.ul,{children:[`\n`,(0,n.jsxDEV)(e.li,{children:(0,n.jsxDEV)(e.a,{href:\"https://www.balanced.software/double-entry-bookkeeping-for-programmers/\",children:\"Double-entry accounting for software engineers\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:226,columnNumber:3},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:226,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:(0,n.jsxDEV)(e.a,{href:\"https://lashewi.medium.com/storing-currency-values-and-float-precision-99029c1e8b71\",children:\"Storing Money and Float Precision\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:227,columnNumber:3},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:227,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:(0,n.jsxDEV)(e.a,{href:\"https://martinfowler.com/eaaDev/EventSourcing.html\",children:\"Event Sourcing\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:228,columnNumber:3},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:228,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:(0,n.jsxDEV)(e.a,{href:\"https://docs.oracle.com/cd/E19455-01/806-0169/overview-9/index.html\",children:\"Decimal and Thousands Separators\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:229,columnNumber:3},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:229,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:(0,n.jsxDEV)(e.a,{href:\"https://developer.squareup.com/blog/books-an-immutable-double-entry-accounting-database-service/\",children:\"Books, an immutable double-entry accounting database service\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:230,columnNumber:3},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:230,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:(0,n.jsxDEV)(e.a,{href:\"https://dev.to/kallmanation/double-entry-bookkeeping-for-programmers-3ok9\",children:\"Double-entry Bookkeeping for Programmers\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:231,columnNumber:3},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:231,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:(0,n.jsxDEV)(e.a,{href:\"https://anvil.works/blog/double-entry-accounting-for-engineers\",children:\"An Engineer's Guide to Double-Entry Bookkeeping\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:232,columnNumber:3},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:232,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:(0,n.jsxDEV)(e.a,{href:\"https://www.andriosrobert.com/p/things-i-wish-i-knew-before-building\",children:\"Things I Wish I Knew Before Building a Ledger\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:233,columnNumber:3},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:233,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:(0,n.jsxDEV)(e.a,{href:\"https://www.twisp.com\",children:\"Twisp - The core accounting engine to power any financial product\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:234,columnNumber:3},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:234,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:(0,n.jsxDEV)(e.a,{href:\"https://blog.journalize.io/posts/an-elegant-db-schema-for-double-entry-accounting/\",children:\"An Elegant DB Schema for Double-Entry Accounting\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:235,columnNumber:3},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:235,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:(0,n.jsxDEV)(e.a,{href:\"https://www.youtube.com/watch?v=iN6mhI5hFt4&t=45s\",children:\"Uber Ledger on DynamoDB and S3\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:236,columnNumber:3},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:236,columnNumber:1},this),`\n`,(0,n.jsxDEV)(e.li,{children:(0,n.jsxDEV)(e.a,{href:\"https://www.bitsaboutmoney.com/archive/a-game-that-intentionally-frustrates-the-player/\",children:\"Reconciliation: A game designed to frustrate the player\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:237,columnNumber:3},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:237,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:226,columnNumber:1},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\",lineNumber:1,columnNumber:1},this)}function xn(u={}){let{wrapper:e}=u.components||{};return e?(0,n.jsxDEV)(e,Object.assign({},u,{children:(0,n.jsxDEV)(ke,u,void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\"},this)}),void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-64d12195-01a6-44a8-a629-e0f1965fa3b3.mdx\"},this):ke(u)}var Nn=xn;return _n(gn);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "posts/2023-08-21-fintech-engineering-challenges.mdx",
  "_raw": {
    "sourceFilePath": "posts/2023-08-21-fintech-engineering-challenges.mdx",
    "sourceFileName": "2023-08-21-fintech-engineering-challenges.mdx",
    "sourceFileDir": "posts",
    "contentType": "mdx",
    "flattenedPath": "posts/2023-08-21-fintech-engineering-challenges"
  },
  "type": "Post",
  "slug": "/posts/2023-08-21-fintech-engineering-challenges",
  "slugAsParams": "2023-08-21-fintech-engineering-challenges",
  "stats": {
    "text": "21 min read",
    "minutes": 20.59,
    "time": 1235400,
    "words": 4118
  }
}