{
  "title": "Dangerous MVPs",
  "excerpt": "When building a new product, we all know we should remain agile and launch something small and simple to start. Then, over time, we can make that product more functional by listening to our customers and adding more features. Unfortunately, the same process wreaks havoc when it comes to modernizing an existing system. At first, the reason why is not intuitive. In theory, the same principles should apply.",
  "coverImage": "/assets/blog/img/sosa.jpg",
  "date": "2021-12-27T00:00:00.000Z",
  "published": true,
  "author": {
    "name": "Dan Stroot",
    "picture": "/assets/blog/authors/dan.jpeg",
    "type": "Author",
    "_raw": {}
  },
  "ogImage": {
    "url": "/assets/blog/img/sosa.jpg",
    "type": "OGImage",
    "_raw": {}
  },
  "seoURL": null,
  "body": {
    "raw": "\nEric Ries, who introduced the concept of the minimum viable product as part of his [Lean Startup](https://www.amazon.com/dp/0307887898?tag=lessolearn01-20&camp=213381&creative=390973&linkCode=as4&creativeASIN=0307887898&adid=004DZWTQ0HQTRCNYZJPD) methodology, describes the purpose of a \"minimum viable product\", or MVP, this way:\n\n> It is the version of a new product that allows a team to collect the maximum amount of validated learning about customers with the least amount of effort.\n\nA MVP is a product with enough features to attract early-adopter customers and validate a product idea early in the product development cycle. The MVP helps the product team receive user feedback as quickly as possible to iterate and improve the product.\n\nBecause the agile methodology is built on validating and iterating products based on user input, the concept of an MVP plays a central role in agile development. When building a new product, we all know we should remain agile and launch something small and simple to start. Then over time, we can improve the product by adding more features over time, as previous features prove their value.\n\nMost importantly, an MVP allows your company to _minimize the time and resources_ (the cost) you might otherwise commit to building a product that won’t succeed.\n\n### Today, there are better ways to learn\n\nThe reason behind implementing an MVP had been to tackle the main issue of learning. It was _the minimum cost necessary to learn_. The first danger is the old(er) ways are no longer the least expensive.\n\nWe simply have better tools for this today. You can learn much earlier, faster, and cheaper — without engineering lifting a finger. Prototyping and design sharing tools such as [InVision](https://www.invisionapp.com/), [Marvel](https://marvelapp.com/), [Figma](https://www.figma.com/prototyping/) and more allow designers and Product Managers to concept, learn, and iterate with user tests. While initial iterations in your prototyping can be minimally viable, a finished product should not.\n\nImagine initial product launches as \"first dates\" with your potential customers: Do you really want their first impression to be — _“I had a minimally viable time”_?\n\n### When an MVP can become dangerous\n\nUnfortunately, the same process wreaks havoc when it comes to modernizing an existing system. At first, the reason why is not intuitive. In theory, the same principles should apply: Start with small and simple use cases and then build upon your success.\n\nThe difference between product development and software modernization is the **hypothesis you need to prove**.\n\n1. Product development: You’re trying to prove that _customers are willing to pay for the product_. You are seeking \"product/market fit\".\n\n2. System modernization: People are already using the system. The system is \"feature complete\" and has been tailored and tweaked over many years. Legacy systems are, after all, successful systems. Instead, the hypothesis we’re trying to prove when we’re modernizing a system is that _the updated technology will do a better job than the technology we’re leaving behind_.\n\n#### Reasons why that might not be the case\n\nModernizing systems that are in heavy use is difficult. When designing an MVP for a modernization effort several issues become apparent:\n\n1. The use cases that seem like the simplest and the most likely to be identified as MVPs are also the parts of the system that no one cares about. We don’t modernize parts of systems that aren’t being used. We should turn them off.\n\n2. Putting the least important set of functionality on a new technology violates the spirit of an MVP. It does not validate that the modernization effort adds value, nor does it \"prove\" the new technology being used is better than the old one.\n\n3. Defining doing a \"better job\" than the old software is surprisingly difficult. Things like \"it will be easier/cheaper to maintain\", or \"we will be able to implement change faster\" are hard things to measure - and may not be true once the new system reaches the same level of complexity and integration as the old system.\n\n4. No one really understands all the complexity embodied in a legacy system - no one person knows how it all works. When a process is automated, the highly skilled people who designed and built the system disappear because their knowledge becomes embodied in the software. Long term maintenance and enhancements means the system is being used in ways not initially considered or designed for, and other processes and systems become intertwined and integrated. This complexity is **exactly** why existing systems are hard to change. Proving a new system via an MVP doesn't make sense unless it shows exactly **how** the new system will meet these challenges.\n\n#### When Validating Migration, Raise the Stakes\n\nThe beginning of a modernization effort is a precious period, so don’t waste it. This is the time when the team has the most excitement, the most momentum, the greatest level of stakeholder buy-in and the most money and staff. When people conflate minimum with simple, they squander a critical stage of the effort.\n\nIt's far better to begin migrations with the harder parts of the system. It’s a more challenging project, yes — but the hard bits won’t be any easier months or years later. When you successfully migrate a hard part of the system, you’ve proven that the modernization itself can add value in the same way a MVP validates the effort of building something new.\n\nConquering a hard part of the system also tends to inspire stakeholders, especially if other modernization efforts have failed in the past. Sometimes this enthusiasm takes the form of increased moral support for the team, but it can also lead to more resources and more favorable prioritization.\n\n### MVP's also need to prove architectural principles\n\nAll too often MVP's ignore basic architectural requirements in the interest of \"low cost\" and \"speed\". If the list below isn't addressed during the MVP development & learning process you will have issues in the future. Those issues could be large enough to derail the whole effort. \n\n* **Security** — basic security requirements need to be taken into account for the MVP. These requirements must be able to support a \"production-quality\" app in the future. Today, security is a core part of the user experience.\n* **Monitoring** — every application should provide monitoring capabilities to monitor performance and system issues. This is tablestakes for a production app, but also super important to learn about the operating qualities and failure states of the MVP.\n* **Platform** — The MVP should run an the same platform that would be used production. It's a mistake to build something \"in house\" and then try to move it to a commercial cloud platform (or vice versa).\n* **Latency and responsiveness** — we shouldn't have immediate concerns about latency and responsiveness, since the MVP deployment will be limited to a small user base, but we do need to learn what is acceptable to the users. Latency/responsivness metrics must be included as part of the basic monitoring capabilities.\n* **Scalability** — not usually a concern at first but the architecture of the MVP must provide a scalability path to maintain the latency and responsiveness defined above. \n* **Data Persistency** — some MVPs start with a \"toy\" database, or data persistency model that must be completely replaced for the \"real\" application to be properly developed. In some cases this makes sense but if possible build the MVP on the right data persistency platform from the start. \n\n### The Takeaway\n\nMVPs are useful because they validate that a project is worth doing before we've wasted too much time and money. A system modernization project hasn't proven its value until it has successfully migrated the important (read: _hard_) parts. For that reason, the right MVP for a modernization effort is often a complex part of the system.\n\nIf you pick an easier part, or don't address basic architectural requirements, you will waste time, money, and maybe political capital doing work that _does not prove that this new technology can be trusted with your most critical business functions_. This turns deadly if the project fails months or years later, after millions of dollars have been spent, all because the \"MVP\" didn't prove the right hypothesis at the start.\n\n#### References\n\n- [Why MVP's Suck](https://medium.com/@rachklausner/why-mvps-suck-ad06b9866ee7)\n- [Why MVPs Suck: Create Sustainable Optimal Viable Products](https://www.linkedin.com/pulse/why-mvps-suck-create-sustainable-optimal-viable-products-tim-b-green/)\n- [I hate MVPs, so do your customers...](https://blog.asmartbear.com/slc.html)\n\n---\n\nImage Credit: **Sammy Sosa, 1998**\n\n<span className=\"text-sm\">\nPersonally, I will argue this one with Cub fans until I die. Yes, Sosa’s team won the Wild Card, and it was a huge story. But the Cardinals finished five games behind them, and it sure as hell wasn’t McGwire’s fault that Jeff Brantley was the Cardinals closer, their bullpen blew an extraordinary number of games, and their starters were not very good either.\n</span>\n",
    "code": "var Component=(()=>{var un=Object.create;var M=Object.defineProperty;var dn=Object.getOwnPropertyDescriptor;var mn=Object.getOwnPropertyNames;var cn=Object.getPrototypeOf,fn=Object.prototype.hasOwnProperty;var B=(d,n)=>()=>(n||d((n={exports:{}}).exports,n),n.exports),hn=(d,n)=>{for(var p in n)M(d,p,{get:n[p],enumerable:!0})},ve=(d,n,p,x)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let y of mn(n))!fn.call(d,y)&&y!==p&&M(d,y,{get:()=>n[y],enumerable:!(x=dn(n,y))||x.enumerable});return d};var bn=(d,n,p)=>(p=d!=null?un(cn(d)):{},ve(n||!d||!d.__esModule?M(p,\"default\",{value:d,enumerable:!0}):p,d)),pn=d=>ve(M({},\"__esModule\",{value:!0}),d);var we=B((Nn,Ne)=>{Ne.exports=React});var Te=B(G=>{\"use strict\";(function(){\"use strict\";var d=we(),n=Symbol.for(\"react.element\"),p=Symbol.for(\"react.portal\"),x=Symbol.for(\"react.fragment\"),y=Symbol.for(\"react.strict_mode\"),X=Symbol.for(\"react.profiler\"),H=Symbol.for(\"react.provider\"),K=Symbol.for(\"react.context\"),E=Symbol.for(\"react.forward_ref\"),D=Symbol.for(\"react.suspense\"),I=Symbol.for(\"react.suspense_list\"),P=Symbol.for(\"react.memo\"),A=Symbol.for(\"react.lazy\"),Pe=Symbol.for(\"react.offscreen\"),J=Symbol.iterator,Re=\"@@iterator\";function ke(e){if(e===null||typeof e!=\"object\")return null;var t=J&&e[J]||e[Re];return typeof t==\"function\"?t:null}var N=d.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function f(e){{for(var t=arguments.length,o=new Array(t>1?t-1:0),a=1;a<t;a++)o[a-1]=arguments[a];Se(\"error\",e,o)}}function Se(e,t,o){{var a=N.ReactDebugCurrentFrame,l=a.getStackAddendum();l!==\"\"&&(t+=\"%s\",o=o.concat([l]));var u=o.map(function(s){return String(s)});u.unshift(\"Warning: \"+t),Function.prototype.apply.call(console[e],console,u)}}var Oe=!1,je=!1,Me=!1,De=!1,Ie=!1,Z;Z=Symbol.for(\"react.module.reference\");function Ae(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===x||e===X||Ie||e===y||e===D||e===I||De||e===Pe||Oe||je||Me||typeof e==\"object\"&&e!==null&&(e.$$typeof===A||e.$$typeof===P||e.$$typeof===H||e.$$typeof===K||e.$$typeof===E||e.$$typeof===Z||e.getModuleId!==void 0))}function Fe(e,t,o){var a=e.displayName;if(a)return a;var l=t.displayName||t.name||\"\";return l!==\"\"?o+\"(\"+l+\")\":o}function Q(e){return e.displayName||\"Context\"}function _(e){if(e==null)return null;if(typeof e.tag==\"number\"&&f(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case x:return\"Fragment\";case p:return\"Portal\";case X:return\"Profiler\";case y:return\"StrictMode\";case D:return\"Suspense\";case I:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case K:var t=e;return Q(t)+\".Consumer\";case H:var o=e;return Q(o._context)+\".Provider\";case E:return Fe(e,e.render,\"ForwardRef\");case P:var a=e.displayName||null;return a!==null?a:_(e.type)||\"Memo\";case A:{var l=e,u=l._payload,s=l._init;try{return _(s(u))}catch{return null}}}return null}var v=Object.assign,C=0,ee,ne,te,re,oe,ae,ie;function se(){}se.__reactDisabledLog=!0;function We(){{if(C===0){ee=console.log,ne=console.info,te=console.warn,re=console.error,oe=console.group,ae=console.groupCollapsed,ie=console.groupEnd;var e={configurable:!0,enumerable:!0,value:se,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}C++}}function Ye(){{if(C--,C===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:v({},e,{value:ee}),info:v({},e,{value:ne}),warn:v({},e,{value:te}),error:v({},e,{value:re}),group:v({},e,{value:oe}),groupCollapsed:v({},e,{value:ae}),groupEnd:v({},e,{value:ie})})}C<0&&f(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var F=N.ReactCurrentDispatcher,W;function R(e,t,o){{if(W===void 0)try{throw Error()}catch(l){var a=l.stack.trim().match(/\\n( *(at )?)/);W=a&&a[1]||\"\"}return`\n`+W+e}}var Y=!1,k;{var ze=typeof WeakMap==\"function\"?WeakMap:Map;k=new ze}function le(e,t){if(!e||Y)return\"\";{var o=k.get(e);if(o!==void 0)return o}var a;Y=!0;var l=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var u;u=F.current,F.current=null,We();try{if(t){var s=function(){throw Error()};if(Object.defineProperty(s.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(s,[])}catch(g){a=g}Reflect.construct(e,[],s)}else{try{s.call()}catch(g){a=g}e.call(s.prototype)}}else{try{throw Error()}catch(g){a=g}e()}}catch(g){if(g&&a&&typeof g.stack==\"string\"){for(var i=g.stack.split(`\n`),h=a.stack.split(`\n`),m=i.length-1,c=h.length-1;m>=1&&c>=0&&i[m]!==h[c];)c--;for(;m>=1&&c>=0;m--,c--)if(i[m]!==h[c]){if(m!==1||c!==1)do if(m--,c--,c<0||i[m]!==h[c]){var b=`\n`+i[m].replace(\" at new \",\" at \");return e.displayName&&b.includes(\"<anonymous>\")&&(b=b.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&k.set(e,b),b}while(m>=1&&c>=0);break}}}finally{Y=!1,F.current=u,Ye(),Error.prepareStackTrace=l}var T=e?e.displayName||e.name:\"\",xe=T?R(T):\"\";return typeof e==\"function\"&&k.set(e,xe),xe}function Le(e,t,o){return le(e,!1)}function $e(e){var t=e.prototype;return!!(t&&t.isReactComponent)}function S(e,t,o){if(e==null)return\"\";if(typeof e==\"function\")return le(e,$e(e));if(typeof e==\"string\")return R(e);switch(e){case D:return R(\"Suspense\");case I:return R(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case E:return Le(e.render);case P:return S(e.type,t,o);case A:{var a=e,l=a._payload,u=a._init;try{return S(u(l),t,o)}catch{}}}return\"\"}var O=Object.prototype.hasOwnProperty,ue={},de=N.ReactDebugCurrentFrame;function j(e){if(e){var t=e._owner,o=S(e.type,e._source,t?t.type:null);de.setExtraStackFrame(o)}else de.setExtraStackFrame(null)}function qe(e,t,o,a,l){{var u=Function.call.bind(O);for(var s in e)if(u(e,s)){var i=void 0;try{if(typeof e[s]!=\"function\"){var h=Error((a||\"React class\")+\": \"+o+\" type `\"+s+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[s]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw h.name=\"Invariant Violation\",h}i=e[s](t,s,a,o,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(m){i=m}i&&!(i instanceof Error)&&(j(l),f(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",a||\"React class\",o,s,typeof i),j(null)),i instanceof Error&&!(i.message in ue)&&(ue[i.message]=!0,j(l),f(\"Failed %s type: %s\",o,i.message),j(null))}}}var Ue=Array.isArray;function z(e){return Ue(e)}function Be(e){{var t=typeof Symbol==\"function\"&&Symbol.toStringTag,o=t&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return o}}function Ge(e){try{return me(e),!1}catch{return!0}}function me(e){return\"\"+e}function ce(e){if(Ge(e))return f(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",Be(e)),me(e)}var V=N.ReactCurrentOwner,Xe={key:!0,ref:!0,__self:!0,__source:!0},fe,he,L;L={};function He(e){if(O.call(e,\"ref\")){var t=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(t&&t.isReactWarning)return!1}return e.ref!==void 0}function Ke(e){if(O.call(e,\"key\")){var t=Object.getOwnPropertyDescriptor(e,\"key\").get;if(t&&t.isReactWarning)return!1}return e.key!==void 0}function Je(e,t){if(typeof e.ref==\"string\"&&V.current&&t&&V.current.stateNode!==t){var o=_(V.current.type);L[o]||(f('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',_(V.current.type),e.ref),L[o]=!0)}}function Ze(e,t){{var o=function(){fe||(fe=!0,f(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",t))};o.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:o,configurable:!0})}}function Qe(e,t){{var o=function(){he||(he=!0,f(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",t))};o.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:o,configurable:!0})}}var en=function(e,t,o,a,l,u,s){var i={$$typeof:n,type:e,key:t,ref:o,props:s,_owner:u};return i._store={},Object.defineProperty(i._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(i,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:a}),Object.defineProperty(i,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:l}),Object.freeze&&(Object.freeze(i.props),Object.freeze(i)),i};function nn(e,t,o,a,l){{var u,s={},i=null,h=null;o!==void 0&&(ce(o),i=\"\"+o),Ke(t)&&(ce(t.key),i=\"\"+t.key),He(t)&&(h=t.ref,Je(t,l));for(u in t)O.call(t,u)&&!Xe.hasOwnProperty(u)&&(s[u]=t[u]);if(e&&e.defaultProps){var m=e.defaultProps;for(u in m)s[u]===void 0&&(s[u]=m[u])}if(i||h){var c=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;i&&Ze(s,c),h&&Qe(s,c)}return en(e,i,h,l,a,V.current,s)}}var $=N.ReactCurrentOwner,be=N.ReactDebugCurrentFrame;function w(e){if(e){var t=e._owner,o=S(e.type,e._source,t?t.type:null);be.setExtraStackFrame(o)}else be.setExtraStackFrame(null)}var q;q=!1;function U(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===n}function pe(){{if($.current){var e=_($.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function tn(e){{if(e!==void 0){var t=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),o=e.lineNumber;return`\n\nCheck your code at `+t+\":\"+o+\".\"}return\"\"}}var _e={};function rn(e){{var t=pe();if(!t){var o=typeof e==\"string\"?e:e.displayName||e.name;o&&(t=`\n\nCheck the top-level render call using <`+o+\">.\")}return t}}function ge(e,t){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var o=rn(t);if(_e[o])return;_e[o]=!0;var a=\"\";e&&e._owner&&e._owner!==$.current&&(a=\" It was passed a child from \"+_(e._owner.type)+\".\"),w(e),f('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',o,a),w(null)}}function ye(e,t){{if(typeof e!=\"object\")return;if(z(e))for(var o=0;o<e.length;o++){var a=e[o];U(a)&&ge(a,t)}else if(U(e))e._store&&(e._store.validated=!0);else if(e){var l=ke(e);if(typeof l==\"function\"&&l!==e.entries)for(var u=l.call(e),s;!(s=u.next()).done;)U(s.value)&&ge(s.value,t)}}}function on(e){{var t=e.type;if(t==null||typeof t==\"string\")return;var o;if(typeof t==\"function\")o=t.propTypes;else if(typeof t==\"object\"&&(t.$$typeof===E||t.$$typeof===P))o=t.propTypes;else return;if(o){var a=_(t);qe(o,e.props,\"prop\",a,e)}else if(t.PropTypes!==void 0&&!q){q=!0;var l=_(t);f(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",l||\"Unknown\")}typeof t.getDefaultProps==\"function\"&&!t.getDefaultProps.isReactClassApproved&&f(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function an(e){{for(var t=Object.keys(e.props),o=0;o<t.length;o++){var a=t[o];if(a!==\"children\"&&a!==\"key\"){w(e),f(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",a),w(null);break}}e.ref!==null&&(w(e),f(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),w(null))}}function sn(e,t,o,a,l,u){{var s=Ae(e);if(!s){var i=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(i+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var h=tn(l);h?i+=h:i+=pe();var m;e===null?m=\"null\":z(e)?m=\"array\":e!==void 0&&e.$$typeof===n?(m=\"<\"+(_(e.type)||\"Unknown\")+\" />\",i=\" Did you accidentally export a JSX literal instead of a component?\"):m=typeof e,f(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",m,i)}var c=nn(e,t,o,l,u);if(c==null)return c;if(s){var b=t.children;if(b!==void 0)if(a)if(z(b)){for(var T=0;T<b.length;T++)ye(b[T],e);Object.freeze&&Object.freeze(b)}else f(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else ye(b,e)}return e===x?an(c):on(c),c}}var ln=sn;G.Fragment=x,G.jsxDEV=ln})()});var Ve=B((Tn,Ce)=>{\"use strict\";Ce.exports=Te()});var xn={};hn(xn,{default:()=>yn,frontmatter:()=>_n});var r=bn(Ve()),_n={title:\"Dangerous MVPs\",excerpt:\"When building a new product, we all know we should remain agile and launch something small and simple to start. Then, over time, we can make that product more functional by listening to our customers and adding more features. Unfortunately, the  same process wreaks havoc when it comes to modernizing an existing system. At first,  the reason why is not intuitive. In theory, the same principles should apply.\",coverImage:\"/assets/blog/img/sosa.jpg\",date:\"2021-12-27\",published:!0,author:{name:\"Dan Stroot\",picture:\"/assets/blog/authors/dan.jpeg\"},ogImage:{url:\"/assets/blog/img/sosa.jpg\"},seoURL:null};function Ee(d){let n=Object.assign({p:\"p\",a:\"a\",blockquote:\"blockquote\",em:\"em\",h3:\"h3\",strong:\"strong\",ol:\"ol\",li:\"li\",h4:\"h4\",ul:\"ul\",hr:\"hr\"},d.components);return(0,r.jsxDEV)(r.Fragment,{children:[(0,r.jsxDEV)(n.p,{children:[\"Eric Ries, who introduced the concept of the minimum viable product as part of his \",(0,r.jsxDEV)(n.a,{href:\"https://www.amazon.com/dp/0307887898?tag=lessolearn01-20&camp=213381&creative=390973&linkCode=as4&creativeASIN=0307887898&adid=004DZWTQ0HQTRCNYZJPD\",children:\"Lean Startup\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:19,columnNumber:84},this),' methodology, describes the purpose of a \"minimum viable product\", or MVP, this way:']},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:19,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.blockquote,{children:[`\n`,(0,r.jsxDEV)(n.p,{children:\"It is the version of a new product that allows a team to collect the maximum amount of validated learning about customers with the least amount of effort.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:21,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:21,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:\"A MVP is a product with enough features to attract early-adopter customers and validate a product idea early in the product development cycle. The MVP helps the product team receive user feedback as quickly as possible to iterate and improve the product.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:23,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:\"Because the agile methodology is built on validating and iterating products based on user input, the concept of an MVP plays a central role in agile development. When building a new product, we all know we should remain agile and launch something small and simple to start. Then over time, we can improve the product by adding more features over time, as previous features prove their value.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:25,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:[\"Most importantly, an MVP allows your company to \",(0,r.jsxDEV)(n.em,{children:\"minimize the time and resources\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:27,columnNumber:49},this),\" (the cost) you might otherwise commit to building a product that won\\u2019t succeed.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:27,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.h3,{id:\"today-there-are-better-ways-to-learn\",children:\"Today, there are better ways to learn\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:29,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:[\"The reason behind implementing an MVP had been to tackle the main issue of learning. It was \",(0,r.jsxDEV)(n.em,{children:\"the minimum cost necessary to learn\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:31,columnNumber:93},this),\". The first danger is the old(er) ways are no longer the least expensive.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:31,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:[\"We simply have better tools for this today. You can learn much earlier, faster, and cheaper \\u2014 without engineering lifting a finger. Prototyping and design sharing tools such as \",(0,r.jsxDEV)(n.a,{href:\"https://www.invisionapp.com/\",children:\"InVision\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:33,columnNumber:178},this),\", \",(0,r.jsxDEV)(n.a,{href:\"https://marvelapp.com/\",children:\"Marvel\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:33,columnNumber:220},this),\", \",(0,r.jsxDEV)(n.a,{href:\"https://www.figma.com/prototyping/\",children:\"Figma\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:33,columnNumber:254},this),\" and more allow designers and Product Managers to concept, learn, and iterate with user tests. While initial iterations in your prototyping can be minimally viable, a finished product should not.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:33,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:['Imagine initial product launches as \"first dates\" with your potential customers: Do you really want their first impression to be \\u2014 ',(0,r.jsxDEV)(n.em,{children:\"\\u201CI had a minimally viable time\\u201D\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:35,columnNumber:132},this),\"?\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:35,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.h3,{id:\"when-an-mvp-can-become-dangerous\",children:\"When an MVP can become dangerous\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:37,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:\"Unfortunately, the same process wreaks havoc when it comes to modernizing an existing system. At first, the reason why is not intuitive. In theory, the same principles should apply: Start with small and simple use cases and then build upon your success.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:39,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:[\"The difference between product development and software modernization is the \",(0,r.jsxDEV)(n.strong,{children:\"hypothesis you need to prove\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:41,columnNumber:78},this),\".\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:41,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.ol,{children:[`\n`,(0,r.jsxDEV)(n.li,{children:[`\n`,(0,r.jsxDEV)(n.p,{children:[\"Product development: You\\u2019re trying to prove that \",(0,r.jsxDEV)(n.em,{children:\"customers are willing to pay for the product\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:43,columnNumber:53},this),'. You are seeking \"product/market fit\".']},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:43,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:43,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[`\n`,(0,r.jsxDEV)(n.p,{children:['System modernization: People are already using the system. The system is \"feature complete\" and has been tailored and tweaked over many years. Legacy systems are, after all, successful systems. Instead, the hypothesis we\\u2019re trying to prove when we\\u2019re modernizing a system is that ',(0,r.jsxDEV)(n.em,{children:\"the updated technology will do a better job than the technology we\\u2019re leaving behind\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:45,columnNumber:284},this),\".\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:45,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:45,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:43,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.h4,{id:\"reasons-why-that-might-not-be-the-case\",children:\"Reasons why that might not be the case\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:47,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:\"Modernizing systems that are in heavy use is difficult. When designing an MVP for a modernization effort several issues become apparent:\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:49,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.ol,{children:[`\n`,(0,r.jsxDEV)(n.li,{children:[`\n`,(0,r.jsxDEV)(n.p,{children:\"The use cases that seem like the simplest and the most likely to be identified as MVPs are also the parts of the system that no one cares about. We don\\u2019t modernize parts of systems that aren\\u2019t being used. We should turn them off.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:51,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:51,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[`\n`,(0,r.jsxDEV)(n.p,{children:'Putting the least important set of functionality on a new technology violates the spirit of an MVP. It does not validate that the modernization effort adds value, nor does it \"prove\" the new technology being used is better than the old one.'},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:53,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:53,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[`\n`,(0,r.jsxDEV)(n.p,{children:'Defining doing a \"better job\" than the old software is surprisingly difficult. Things like \"it will be easier/cheaper to maintain\", or \"we will be able to implement change faster\" are hard things to measure - and may not be true once the new system reaches the same level of complexity and integration as the old system.'},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:55,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:55,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[`\n`,(0,r.jsxDEV)(n.p,{children:[\"No one really understands all the complexity embodied in a legacy system - no one person knows how it all works. When a process is automated, the highly skilled people who designed and built the system disappear because their knowledge becomes embodied in the software. Long term maintenance and enhancements means the system is being used in ways not initially considered or designed for, and other processes and systems become intertwined and integrated. This complexity is \",(0,r.jsxDEV)(n.strong,{children:\"exactly\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:57,columnNumber:480},this),\" why existing systems are hard to change. Proving a new system via an MVP doesn't make sense unless it shows exactly \",(0,r.jsxDEV)(n.strong,{children:\"how\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:57,columnNumber:608},this),\" the new system will meet these challenges.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:57,columnNumber:4},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:57,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:51,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.h4,{id:\"when-validating-migration-raise-the-stakes\",children:\"When Validating Migration, Raise the Stakes\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:59,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:\"The beginning of a modernization effort is a precious period, so don\\u2019t waste it. This is the time when the team has the most excitement, the most momentum, the greatest level of stakeholder buy-in and the most money and staff. When people conflate minimum with simple, they squander a critical stage of the effort.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:61,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:\"It's far better to begin migrations with the harder parts of the system. It\\u2019s a more challenging project, yes \\u2014 but the hard bits won\\u2019t be any easier months or years later. When you successfully migrate a hard part of the system, you\\u2019ve proven that the modernization itself can add value in the same way a MVP validates the effort of building something new.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:63,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:\"Conquering a hard part of the system also tends to inspire stakeholders, especially if other modernization efforts have failed in the past. Sometimes this enthusiasm takes the form of increased moral support for the team, but it can also lead to more resources and more favorable prioritization.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:65,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.h3,{id:\"mvps-also-need-to-prove-architectural-principles\",children:\"MVP's also need to prove architectural principles\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:67,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:`All too often MVP's ignore basic architectural requirements in the interest of \"low cost\" and \"speed\". If the list below isn't addressed during the MVP development & learning process you will have issues in the future. Those issues could be large enough to derail the whole effort.`},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:69,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.ul,{children:[`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Security\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:71,columnNumber:3},this),' \\u2014 basic security requirements need to be taken into account for the MVP. These requirements must be able to support a \"production-quality\" app in the future. Today, security is a core part of the user experience.']},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:71,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Monitoring\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:72,columnNumber:3},this),\" \\u2014 every application should provide monitoring capabilities to monitor performance and system issues. This is tablestakes for a production app, but also super important to learn about the operating qualities and failure states of the MVP.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:72,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Platform\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:73,columnNumber:3},this),` \\u2014 The MVP should run an the same platform that would be used production. It's a mistake to build something \"in house\" and then try to move it to a commercial cloud platform (or vice versa).`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:73,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Latency and responsiveness\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:74,columnNumber:3},this),\" \\u2014 we shouldn't have immediate concerns about latency and responsiveness, since the MVP deployment will be limited to a small user base, but we do need to learn what is acceptable to the users. Latency/responsivness metrics must be included as part of the basic monitoring capabilities.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:74,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Scalability\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:75,columnNumber:3},this),\" \\u2014 not usually a concern at first but the architecture of the MVP must provide a scalability path to maintain the latency and responsiveness defined above.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:75,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:[(0,r.jsxDEV)(n.strong,{children:\"Data Persistency\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:76,columnNumber:3},this),' \\u2014 some MVPs start with a \"toy\" database, or data persistency model that must be completely replaced for the \"real\" application to be properly developed. In some cases this makes sense but if possible build the MVP on the right data persistency platform from the start.']},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:76,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:71,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.h3,{id:\"the-takeaway\",children:\"The Takeaway\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:78,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:[\"MVPs are useful because they validate that a project is worth doing before we've wasted too much time and money. A system modernization project hasn't proven its value until it has successfully migrated the important (read: \",(0,r.jsxDEV)(n.em,{children:\"hard\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:80,columnNumber:225},this),\") parts. For that reason, the right MVP for a modernization effort is often a complex part of the system.\"]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:80,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:[\"If you pick an easier part, or don't address basic architectural requirements, you will waste time, money, and maybe political capital doing work that \",(0,r.jsxDEV)(n.em,{children:\"does not prove that this new technology can be trusted with your most critical business functions\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:82,columnNumber:152},this),`. This turns deadly if the project fails months or years later, after millions of dollars have been spent, all because the \"MVP\" didn't prove the right hypothesis at the start.`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:82,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.h4,{id:\"references\",children:\"References\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:84,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.ul,{children:[`\n`,(0,r.jsxDEV)(n.li,{children:(0,r.jsxDEV)(n.a,{href:\"https://medium.com/@rachklausner/why-mvps-suck-ad06b9866ee7\",children:\"Why MVP's Suck\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:86,columnNumber:3},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:86,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:(0,r.jsxDEV)(n.a,{href:\"https://www.linkedin.com/pulse/why-mvps-suck-create-sustainable-optimal-viable-products-tim-b-green/\",children:\"Why MVPs Suck: Create Sustainable Optimal Viable Products\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:87,columnNumber:3},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:87,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.li,{children:(0,r.jsxDEV)(n.a,{href:\"https://blog.asmartbear.com/slc.html\",children:\"I hate MVPs, so do your customers...\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:88,columnNumber:3},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:88,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:86,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.hr,{},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:90,columnNumber:1},this),`\n`,(0,r.jsxDEV)(n.p,{children:[\"Image Credit: \",(0,r.jsxDEV)(n.strong,{children:\"Sammy Sosa, 1998\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:92,columnNumber:15},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:92,columnNumber:1},this),`\n`,(0,r.jsxDEV)(\"span\",{className:\"text-sm\",children:(0,r.jsxDEV)(n.p,{children:\"Personally, I will argue this one with Cub fans until I die. Yes, Sosa\\u2019s team won the Wild Card, and it was a huge story. But the Cardinals finished five games behind them, and it sure as hell wasn\\u2019t McGwire\\u2019s fault that Jeff Brantley was the Cardinals closer, their bullpen blew an extraordinary number of games, and their starters were not very good either.\"},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:95,columnNumber:1},this)},void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:94,columnNumber:1},this)]},void 0,!0,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\",lineNumber:1,columnNumber:1},this)}function gn(d={}){let{wrapper:n}=d.components||{};return n?(0,r.jsxDEV)(n,Object.assign({},d,{children:(0,r.jsxDEV)(Ee,d,void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\"},this)}),void 0,!1,{fileName:\"/Volumes/T7/Code/blog-next-13/content/posts/_mdx_bundler_entry_point-4206012a-ae65-4340-9357-292a732d574e.mdx\"},this):Ee(d)}var yn=gn;return pn(xn);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "posts/2021-12-27-dangerous-mvps.mdx",
  "_raw": {
    "sourceFilePath": "posts/2021-12-27-dangerous-mvps.mdx",
    "sourceFileName": "2021-12-27-dangerous-mvps.mdx",
    "sourceFileDir": "posts",
    "contentType": "mdx",
    "flattenedPath": "posts/2021-12-27-dangerous-mvps"
  },
  "type": "Post",
  "slug": "/posts/2021-12-27-dangerous-mvps",
  "slugAsParams": "2021-12-27-dangerous-mvps",
  "stats": {
    "text": "8 min read",
    "minutes": 7.225,
    "time": 433500,
    "words": 1445
  }
}