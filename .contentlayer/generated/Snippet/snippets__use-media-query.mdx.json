{
  "title": "useMediaQuery",
  "summary": "useMediaQuery is a react hook that makes testing for media query matches in your code easier and simpler. ",
  "icon": "js",
  "date": "2021-10-23T00:00:00.000Z",
  "published": true,
  "tags": [
    "React Hook"
  ],
  "body": {
    "raw": "\n### Code\n\n<CodeBlock>\n\n```JavaScript:useMediaQuery.js\nimport { useState, useEffect } from 'react';\n\nexport const useMediaQuery = query => {\n  const [state, setState] = useState(false);\n\n  useEffect(\n    () => {\n      let mounted = true;\n\n      // Returns a MediaQueryList object\n      const mql = window.matchMedia(query);\n      const onChange = () => {\n        if (!mounted) return;\n        setState(!!mql.matches);\n      };\n\n      mql.addListener(onChange);\n      setState(mql.matches);\n\n      // clean up\n      return () => {\n        mounted = false;\n        mql.removeListener(onChange);\n      };\n    },\n    [query]\n  );\n\n  return state;\n};\n```\n\n</CodeBlock>\n\n### Context\n\nIf you have a special case, when you need to get media query result inside you react app (for example, you want to show different components on mobile and desktop) this is the way to do so.\n\n### Usage\n\n<CodeBlock>\n\n```jsx:useMediaQueryExample.jsx\nconst EffecfulComponent = () => {\n  const result = useMediaQuery(`screen and (max-width: 400px)`);\n  return <span>{result.toString()}</span>;\n};\n\nconst biggerThan400 = useMediaQuery(`(min-width: 400px)`);\n\nreturn <div>\n    {biggerThan400 && <button>SomeButton</button>}\n</div>\n```\n\n</CodeBlock>\n",
    "code": "var Component=(()=>{var o=Object.create;var c=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var N=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),y=(n,e)=>{for(var a in e)c(n,a,{get:e[a],enumerable:!0})},r=(n,e,a,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of p(e))!j.call(n,l)&&l!==a&&c(n,l,{get:()=>e[l],enumerable:!(t=m(e,l))||t.enumerable});return n};var f=(n,e,a)=>(a=n!=null?o(u(n)):{},r(e||!n||!n.__esModule?c(a,\"default\",{value:n,enumerable:!0}):a,n)),g=n=>r(c({},\"__esModule\",{value:!0}),n);var h=N((v,i)=>{i.exports=_jsx_runtime});var M={};y(M,{default:()=>x,frontmatter:()=>w});var s=f(h()),w={title:\"useMediaQuery\",published:!0,date:\"2021-10-23\",summary:\"useMediaQuery is a react hook that makes testing for media query matches in your code easier and simpler. \",icon:\"js\",tags:[\"React Hook\"]};function d(n){let e=Object.assign({h3:\"h3\",div:\"div\",pre:\"pre\",code:\"code\",span:\"span\",p:\"p\"},n.components),{CodeBlock:a}=e;return a||_(\"CodeBlock\",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h3,{id:\"code\",children:\"Code\"}),`\n`,(0,s.jsxs)(a,{children:[(0,s.jsx)(e.div,{className:\"rehype-code-title\",children:\"useMediaQuery.js\"}),(0,s.jsx)(e.pre,{children:(0,s.jsxs)(e.code,{className:\"hljs language-JavaScript\",children:[(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"import\"}),\" { useState, useEffect } \",(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"from\"}),\" \",(0,s.jsx)(e.span,{className:\"hljs-string\",children:\"'react'\"}),`;\n\n`,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"export\"}),\" \",(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" \",(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"useMediaQuery\"}),` = query => {\n  `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" [state, setState] = \",(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"useState\"}),\"(\",(0,s.jsx)(e.span,{className:\"hljs-literal\",children:\"false\"}),`);\n\n  `,(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"useEffect\"}),`(\n    `,(0,s.jsx)(e.span,{className:\"hljs-function\",children:\"() =>\"}),` {\n      `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"let\"}),\" mounted = \",(0,s.jsx)(e.span,{className:\"hljs-literal\",children:\"true\"}),`;\n\n      `,(0,s.jsx)(e.span,{className:\"hljs-comment\",children:\"// Returns a MediaQueryList object\"}),`\n      `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" mql = \",(0,s.jsx)(e.span,{className:\"hljs-variable language_\",children:\"window\"}),\".\",(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"matchMedia\"}),`(query);\n      `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" \",(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"onChange\"}),\" = (\",(0,s.jsx)(e.span,{className:\"hljs-params\"}),`) => {\n        `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"if\"}),\" (!mounted) \",(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"return\"}),`;\n        `,(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"setState\"}),\"(!!mql.\",(0,s.jsx)(e.span,{className:\"hljs-property\",children:\"matches\"}),`);\n      };\n\n      mql.`,(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"addListener\"}),`(onChange);\n      `,(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"setState\"}),\"(mql.\",(0,s.jsx)(e.span,{className:\"hljs-property\",children:\"matches\"}),`);\n\n      `,(0,s.jsx)(e.span,{className:\"hljs-comment\",children:\"// clean up\"}),`\n      `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"return\"}),\" \",(0,s.jsx)(e.span,{className:\"hljs-function\",children:\"() =>\"}),` {\n        mounted = `,(0,s.jsx)(e.span,{className:\"hljs-literal\",children:\"false\"}),`;\n        mql.`,(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"removeListener\"}),`(onChange);\n      };\n    },\n    [query]\n  );\n\n  `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"return\"}),` state;\n};\n`]})})]}),`\n`,(0,s.jsx)(e.h3,{id:\"context\",children:\"Context\"}),`\n`,(0,s.jsx)(e.p,{children:\"If you have a special case, when you need to get media query result inside you react app (for example, you want to show different components on mobile and desktop) this is the way to do so.\"}),`\n`,(0,s.jsx)(e.h3,{id:\"usage\",children:\"Usage\"}),`\n`,(0,s.jsxs)(a,{children:[(0,s.jsx)(e.div,{className:\"rehype-code-title\",children:\"useMediaQueryExample.jsx\"}),(0,s.jsx)(e.pre,{children:(0,s.jsxs)(e.code,{className:\"hljs language-jsx\",children:[(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" \",(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"EffecfulComponent\"}),\" = (\",(0,s.jsx)(e.span,{className:\"hljs-params\"}),`) => {\n  `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" result = \",(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"useMediaQuery\"}),\"(\",(0,s.jsx)(e.span,{className:\"hljs-string\",children:\"`screen and (max-width: 400px)`\"}),`);\n  `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"return\"}),\" \",(0,s.jsxs)(e.span,{className:\"xml\",children:[(0,s.jsxs)(e.span,{className:\"hljs-tag\",children:[\"<\",(0,s.jsx)(e.span,{className:\"hljs-name\",children:\"span\"}),\">\"]}),\"{result.toString()}\",(0,s.jsxs)(e.span,{className:\"hljs-tag\",children:[\"</\",(0,s.jsx)(e.span,{className:\"hljs-name\",children:\"span\"}),\">\"]})]}),`;\n};\n\n`,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" biggerThan400 = \",(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"useMediaQuery\"}),\"(\",(0,s.jsx)(e.span,{className:\"hljs-string\",children:\"`(min-width: 400px)`\"}),`);\n\n`,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"return\"}),\" \",(0,s.jsxs)(e.span,{className:\"xml\",children:[(0,s.jsxs)(e.span,{className:\"hljs-tag\",children:[\"<\",(0,s.jsx)(e.span,{className:\"hljs-name\",children:\"div\"}),\">\"]}),`\n    {biggerThan400 && `,(0,s.jsxs)(e.span,{className:\"hljs-tag\",children:[\"<\",(0,s.jsx)(e.span,{className:\"hljs-name\",children:\"button\"}),\">\"]}),\"SomeButton\",(0,s.jsxs)(e.span,{className:\"hljs-tag\",children:[\"</\",(0,s.jsx)(e.span,{className:\"hljs-name\",children:\"button\"}),\">\"]}),`}\n`,(0,s.jsxs)(e.span,{className:\"hljs-tag\",children:[\"</\",(0,s.jsx)(e.span,{className:\"hljs-name\",children:\"div\"}),\">\"]})]}),`\n`]})})]})]})}function k(n={}){let{wrapper:e}=n.components||{};return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(d,n)})):d(n)}var x=k;function _(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return g(M);})();\n;return Component;"
  },
  "_id": "snippets/use-media-query.mdx",
  "_raw": {
    "sourceFilePath": "snippets/use-media-query.mdx",
    "sourceFileName": "use-media-query.mdx",
    "sourceFileDir": "snippets",
    "contentType": "mdx",
    "flattenedPath": "snippets/use-media-query"
  },
  "type": "Snippet",
  "slug": "/snippets/use-media-query",
  "slugAsParams": "use-media-query",
  "stats": {
    "text": "1 min read",
    "minutes": 0.725,
    "time": 43500,
    "words": 145
  }
}