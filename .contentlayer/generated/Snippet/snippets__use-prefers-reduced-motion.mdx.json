{
  "title": "usePrefersReducedMotion",
  "summary": "Some people do not prefer animations, and for some motion can be harmful. The prefers-reduced-motion CSS media query allows us to disable animations.",
  "icon": "react",
  "date": "2021-10-23T00:00:00.000Z",
  "published": true,
  "tags": [
    "React Hook"
  ],
  "body": {
    "raw": "\n<CodeBlock>\n\n```JavaScript:usePrefersReducedMotion.js\nconst QUERY = '(prefers-reduced-motion: no-preference)';\nconst isRenderingOnServer = typeof window === 'undefined';\n\nconst getInitialState = () => {\n  // For our initial server render, we won't know if the user\n  // prefers reduced motion, but it doesn't matter. This value\n  // will be overwritten on the client, before any animations\n  // occur.\n  return isRenderingOnServer ? true : !window.matchMedia(QUERY).matches;\n};\n\nfunction usePrefersReducedMotion() {\n  const [prefersReducedMotion, setPrefersReducedMotion] = React.useState(\n    getInitialState\n  );\n\n  React.useEffect(() => {\n    const mediaQueryList = window.matchMedia(QUERY);\n    const listener = (event) => {\n      setPrefersReducedMotion(!event.matches);\n    };\n\n    if (mediaQueryList.addEventListener) {\n      mediaQueryList.addEventListener('change', listener);\n    } else {\n      mediaQueryList.addListener(listener);\n    }\n\n    return () => {\n      if (mediaQueryList.removeEventListener) {\n        mediaQueryList.removeEventListener('change', listener);\n      } else {\n        mediaQueryList.removeListener(listener);\n      }\n    };\n  }, []);\n\n  return prefersReducedMotion;\n}\n```\n\n</CodeBlock>\n\n### Context\n\nSome people don't prefer animations, and for some motion can be harmful. The prefers-reduced-motion CSS media query allows us to disable animations. For animations that are entirely in CSS (eg. CSS transitions, CSS keyframe animations), this is all you need.\n\nWhat about for our animations in JavaScript, though? For example, when we use a library like React Spring or Framer Motion? We need to manage it ourselves, and this hook helps.\n\n### Usage\n\n<CodeBlock>\n\n```jsx:prefersReducedMotionExample.jsx\nimport { useSpring, animated } from 'react-spring';\n\nconst Box = ({ isBig }) => {\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  const styles = useSpring({\n    width: 100,\n    height: 100,\n    background: 'rebeccapurple',\n    transform: isBig ? 'scale(2)' : 'scale(1)',\n    immediate: prefersReducedMotion,\n  });\n\n  return <animated.div style={styles}>Box!</animated.div>;\n};\n```\n\n</CodeBlock>\n",
    "code": "var Component=(()=>{var o=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var N=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),f=(n,e)=>{for(var a in e)r(n,a,{get:e[a],enumerable:!0})},c=(n,e,a,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of p(e))!j.call(n,l)&&l!==a&&r(n,l,{get:()=>e[l],enumerable:!(i=m(e,l))||i.enumerable});return n};var y=(n,e,a)=>(a=n!=null?o(u(n)):{},c(e||!n||!n.__esModule?r(a,\"default\",{value:n,enumerable:!0}):a,n)),g=n=>c(r({},\"__esModule\",{value:!0}),n);var d=N((R,t)=>{t.exports=_jsx_runtime});var b={};f(b,{default:()=>k,frontmatter:()=>w});var s=y(d()),w={title:\"usePrefersReducedMotion\",published:!0,date:\"2021-10-23\",summary:\"Some people do not prefer animations, and for some motion can be harmful. The prefers-reduced-motion CSS media query allows us to disable animations.\",icon:\"react\",tags:[\"React Hook\"]};function h(n){let e=Object.assign({div:\"div\",pre:\"pre\",code:\"code\",span:\"span\",h3:\"h3\",p:\"p\"},n.components),{CodeBlock:a}=e;return a||v(\"CodeBlock\",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(a,{children:[(0,s.jsx)(e.div,{className:\"rehype-code-title\",children:\"usePrefersReducedMotion.js\"}),(0,s.jsx)(e.pre,{children:(0,s.jsxs)(e.code,{className:\"hljs language-JavaScript\",children:[(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" \",(0,s.jsx)(e.span,{className:\"hljs-variable constant_\",children:\"QUERY\"}),\" = \",(0,s.jsx)(e.span,{className:\"hljs-string\",children:\"'(prefers-reduced-motion: no-preference)'\"}),`;\n`,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" isRenderingOnServer = \",(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"typeof\"}),\" \",(0,s.jsx)(e.span,{className:\"hljs-variable language_\",children:\"window\"}),\" === \",(0,s.jsx)(e.span,{className:\"hljs-string\",children:\"'undefined'\"}),`;\n\n`,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" \",(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"getInitialState\"}),\" = (\",(0,s.jsx)(e.span,{className:\"hljs-params\"}),`) => {\n  `,(0,s.jsx)(e.span,{className:\"hljs-comment\",children:\"// For our initial server render, we won't know if the user\"}),`\n  `,(0,s.jsx)(e.span,{className:\"hljs-comment\",children:\"// prefers reduced motion, but it doesn't matter. This value\"}),`\n  `,(0,s.jsx)(e.span,{className:\"hljs-comment\",children:\"// will be overwritten on the client, before any animations\"}),`\n  `,(0,s.jsx)(e.span,{className:\"hljs-comment\",children:\"// occur.\"}),`\n  `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"return\"}),\" isRenderingOnServer ? \",(0,s.jsx)(e.span,{className:\"hljs-literal\",children:\"true\"}),\" : !\",(0,s.jsx)(e.span,{className:\"hljs-variable language_\",children:\"window\"}),\".\",(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"matchMedia\"}),\"(\",(0,s.jsx)(e.span,{className:\"hljs-variable constant_\",children:\"QUERY\"}),\").\",(0,s.jsx)(e.span,{className:\"hljs-property\",children:\"matches\"}),`;\n};\n\n`,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"function\"}),\" \",(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"usePrefersReducedMotion\"}),\"(\",(0,s.jsx)(e.span,{className:\"hljs-params\"}),`) {\n  `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" [prefersReducedMotion, setPrefersReducedMotion] = \",(0,s.jsx)(e.span,{className:\"hljs-title class_\",children:\"React\"}),\".\",(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"useState\"}),`(\n    getInitialState\n  );\n\n  `,(0,s.jsx)(e.span,{className:\"hljs-title class_\",children:\"React\"}),\".\",(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"useEffect\"}),\"(\",(0,s.jsx)(e.span,{className:\"hljs-function\",children:\"() =>\"}),` {\n    `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" mediaQueryList = \",(0,s.jsx)(e.span,{className:\"hljs-variable language_\",children:\"window\"}),\".\",(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"matchMedia\"}),\"(\",(0,s.jsx)(e.span,{className:\"hljs-variable constant_\",children:\"QUERY\"}),`);\n    `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" \",(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"listener\"}),\" = (\",(0,s.jsx)(e.span,{className:\"hljs-params\",children:\"event\"}),`) => {\n      `,(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"setPrefersReducedMotion\"}),\"(!event.\",(0,s.jsx)(e.span,{className:\"hljs-property\",children:\"matches\"}),`);\n    };\n\n    `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"if\"}),\" (mediaQueryList.\",(0,s.jsx)(e.span,{className:\"hljs-property\",children:\"addEventListener\"}),`) {\n      mediaQueryList.`,(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"addEventListener\"}),\"(\",(0,s.jsx)(e.span,{className:\"hljs-string\",children:\"'change'\"}),`, listener);\n    } `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"else\"}),` {\n      mediaQueryList.`,(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"addListener\"}),`(listener);\n    }\n\n    `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"return\"}),\" \",(0,s.jsx)(e.span,{className:\"hljs-function\",children:\"() =>\"}),` {\n      `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"if\"}),\" (mediaQueryList.\",(0,s.jsx)(e.span,{className:\"hljs-property\",children:\"removeEventListener\"}),`) {\n        mediaQueryList.`,(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"removeEventListener\"}),\"(\",(0,s.jsx)(e.span,{className:\"hljs-string\",children:\"'change'\"}),`, listener);\n      } `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"else\"}),` {\n        mediaQueryList.`,(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"removeListener\"}),`(listener);\n      }\n    };\n  }, []);\n\n  `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"return\"}),` prefersReducedMotion;\n}\n`]})})]}),`\n`,(0,s.jsx)(e.h3,{id:\"context\",children:\"Context\"}),`\n`,(0,s.jsx)(e.p,{children:\"Some people don't prefer animations, and for some motion can be harmful. The prefers-reduced-motion CSS media query allows us to disable animations. For animations that are entirely in CSS (eg. CSS transitions, CSS keyframe animations), this is all you need.\"}),`\n`,(0,s.jsx)(e.p,{children:\"What about for our animations in JavaScript, though? For example, when we use a library like React Spring or Framer Motion? We need to manage it ourselves, and this hook helps.\"}),`\n`,(0,s.jsx)(e.h3,{id:\"usage\",children:\"Usage\"}),`\n`,(0,s.jsxs)(a,{children:[(0,s.jsx)(e.div,{className:\"rehype-code-title\",children:\"prefersReducedMotionExample.jsx\"}),(0,s.jsx)(e.pre,{children:(0,s.jsxs)(e.code,{className:\"hljs language-jsx\",children:[(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"import\"}),\" { useSpring, animated } \",(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"from\"}),\" \",(0,s.jsx)(e.span,{className:\"hljs-string\",children:\"'react-spring'\"}),`;\n\n`,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" \",(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"Box\"}),\" = (\",(0,s.jsx)(e.span,{className:\"hljs-params\",children:\"{ isBig }\"}),`) => {\n  `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" prefersReducedMotion = \",(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"usePrefersReducedMotion\"}),`();\n\n  `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"const\"}),\" styles = \",(0,s.jsx)(e.span,{className:\"hljs-title function_\",children:\"useSpring\"}),`({\n    `,(0,s.jsx)(e.span,{className:\"hljs-attr\",children:\"width\"}),\": \",(0,s.jsx)(e.span,{className:\"hljs-number\",children:\"100\"}),`,\n    `,(0,s.jsx)(e.span,{className:\"hljs-attr\",children:\"height\"}),\": \",(0,s.jsx)(e.span,{className:\"hljs-number\",children:\"100\"}),`,\n    `,(0,s.jsx)(e.span,{className:\"hljs-attr\",children:\"background\"}),\": \",(0,s.jsx)(e.span,{className:\"hljs-string\",children:\"'rebeccapurple'\"}),`,\n    `,(0,s.jsx)(e.span,{className:\"hljs-attr\",children:\"transform\"}),\": isBig ? \",(0,s.jsx)(e.span,{className:\"hljs-string\",children:\"'scale(2)'\"}),\" : \",(0,s.jsx)(e.span,{className:\"hljs-string\",children:\"'scale(1)'\"}),`,\n    `,(0,s.jsx)(e.span,{className:\"hljs-attr\",children:\"immediate\"}),`: prefersReducedMotion,\n  });\n\n  `,(0,s.jsx)(e.span,{className:\"hljs-keyword\",children:\"return\"}),\" \",(0,s.jsxs)(e.span,{className:\"xml\",children:[(0,s.jsxs)(e.span,{className:\"hljs-tag\",children:[\"<\",(0,s.jsx)(e.span,{className:\"hljs-name\",children:\"animated.div\"}),\" \",(0,s.jsx)(e.span,{className:\"hljs-attr\",children:\"style\"}),\"=\",(0,s.jsx)(e.span,{className:\"hljs-string\",children:\"{styles}\"}),\">\"]}),\"Box!\",(0,s.jsxs)(e.span,{className:\"hljs-tag\",children:[\"</\",(0,s.jsx)(e.span,{className:\"hljs-name\",children:\"animated.div\"}),\">\"]})]}),`;\n};\n`]})})]})]})}function _(n={}){let{wrapper:e}=n.components||{};return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(h,n)})):h(n)}var k=_;function v(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return g(b);})();\n;return Component;"
  },
  "_id": "snippets/use-prefers-reduced-motion.mdx",
  "_raw": {
    "sourceFilePath": "snippets/use-prefers-reduced-motion.mdx",
    "sourceFileName": "use-prefers-reduced-motion.mdx",
    "sourceFileDir": "snippets",
    "contentType": "mdx",
    "flattenedPath": "snippets/use-prefers-reduced-motion"
  },
  "type": "Snippet",
  "slug": "/snippets/use-prefers-reduced-motion",
  "slugAsParams": "use-prefers-reduced-motion",
  "stats": {
    "text": "2 min read",
    "minutes": 1.195,
    "time": 71700,
    "words": 239
  }
}